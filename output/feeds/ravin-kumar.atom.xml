<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>A Pelican Blog - Ravin Kumar</title><link href="/" rel="alternate"></link><link href="/feeds/ravin-kumar.atom.xml" rel="self"></link><id>/</id><updated>2022-06-19T00:00:00+00:00</updated><entry><title>Decisioning with Data Science - PyData Ljubljana Talk</title><link href="/DecisioningwithDataScience.html" rel="alternate"></link><published>2022-06-19T00:00:00+00:00</published><updated>2022-06-19T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2022-06-19:/DecisioningwithDataScience.html</id><summary type="html">&lt;p&gt;Successful decisioning making with data in a business isn't automatic.
And it doesn't happen by importing a library 
and writing a couple lines of code.
There are many factors to consider from data, to timing, to use case.
This was the topic of my talk from PyData Ljubljana.
In the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Successful decisioning making with data in a business isn't automatic.
And it doesn't happen by importing a library 
and writing a couple lines of code.
There are many factors to consider from data, to timing, to use case.
This was the topic of my talk from PyData Ljubljana.
In the talk I shared my learnings from the various organizations 
where I've needed aid a decision with the use of data.&lt;/p&gt;
&lt;p&gt;You can find the slides below,
I hope they help you in the challenges you're facing.
Many thanks to &lt;a href="https://twitter.com/mihagazvoda"&gt;Miha Gasvoda&lt;/a&gt; for inviting me to speak.&lt;/p&gt;
&lt;iframe src="https://docs.google.com/presentation/d/e/2PACX-1vSgd-rRvUMqI9_u8w3voRoh8EbjfEElyF-9e_dhalzCMpg6ByCeNvvdzVTd51g9WI5HLl-E20ufQDPD/embed?start=false&amp;loop=false&amp;delayms=60000" frameborder="0" width="960" height="569" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;meta name="twitter:card" content="summary_large_image"&gt;
&lt;meta name="twitter:creator" content="@canyon289"&gt;
&lt;meta name="twitter:title" content="A practical guide"&gt;
&lt;meta name="twitter:description" content="Many thanks for PyData Ljubljana for hosting"&gt;
&lt;meta name="twitter:image" content="https://ravinkumar.com/images/SocialMedia/twitter/PyDataLjubljana.png"&gt;&lt;/p&gt;</content><category term="Data Science"></category><category term="Education"></category></entry><entry><title>Inaugural Book Club</title><link href="/BookClub2022.html" rel="alternate"></link><published>2022-05-27T00:00:00+00:00</published><updated>2022-05-27T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2022-05-27:/BookClub2022.html</id><summary type="html">&lt;p&gt;A couple of days ago I thought a stats book club would be great but wasn't sure if anyone else thought so too
so thought I'd ask the twitterverse.
&lt;blockquote class="twitter-tweet tw-align-center"&gt;&lt;p lang="en" dir="ltr"&gt;Thinking of starting a stats book club where each week or two we walk through a chapter, test out models, and …&lt;/p&gt;&lt;/blockquote&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;A couple of days ago I thought a stats book club would be great but wasn't sure if anyone else thought so too
so thought I'd ask the twitterverse.
&lt;blockquote class="twitter-tweet tw-align-center"&gt;&lt;p lang="en" dir="ltr"&gt;Thinking of starting a stats book club where each week or two we walk through a chapter, test out models, and generally chat about&lt;br&gt;&lt;br&gt;Probably over livestream as that&amp;#39;s been working out great&lt;br&gt;&lt;br&gt;Anyone interested in this idea? Ive already got one book in mind&lt;/p&gt;&amp;mdash; RavinKumar (@canyon289) &lt;a href="https://twitter.com/canyon289/status/1530048907526299648?ref_src=twsrc%5Etfw"&gt;May 27, 2022&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt; &lt;/p&gt;
&lt;p&gt;Well my prior uncertainty has been overwhelmed with data. 
Let's make it happen.
For everyone who responded, thank you. 
You made this happen.
If you're certain you want to sign up the mailing list link is below.&lt;/p&gt;
&lt;h2&gt;Goal, Structure, and Pacing&lt;/h2&gt;
&lt;p&gt;The goal of this is to encourage continuous learning and sharing of knowledge in an encouraging environment.
It's also important that this is accessible to anyone interested.
Folks should be able to participate when it works for them, at the pace that works for them.&lt;/p&gt;
&lt;p&gt;From the responses its clear no one timezone or day works, 
and even within a timezone day people are different levels of "busy".&lt;/p&gt;
&lt;p&gt;So this is going to be an &lt;mark&gt;&lt;strong&gt;async first&lt;/strong&gt;&lt;/mark&gt; club
There'll be Discourse for ongoing community conversation and 
recorded YouTube streams that I'll host for synchronous sessions (at least for the first book). 
These two platforms capture discussions and knowledge in a persistent way that balances the magic of synchronous
conversations with the async first principle that's guiding this group.&lt;/p&gt;
&lt;p&gt;For a working cadence I'm thinking about a two to three week cycle and where we cover a chapter each cycle.
As we read we can discuss on Discourse so folks can come in on their own time
and catch up on previous conversations.
In each cycle I'll also run a livestream where that chapter is discussed
and share thoughts and impressions from my personal experience with a question and answer component. 
The livestream will be recorded keeping with the async first principle.
Without actual data this feels like the right balance between "casual walk" versus "all out sprint",
synchronous versus async,
and "leader led" versus open "community".
I'll figure out other ways to make this useful,
while sticking to the async first principle,
and always with the aim of maximizing the amount of learning.&lt;/p&gt;
&lt;p&gt;Are these choices the perfect ones? I'm honestly not sure but let's try it and adjust from there.&lt;/p&gt;
&lt;h2&gt;The first book: Causal Inference Mixtape&lt;/h2&gt;
&lt;p&gt;Causal Inference is a topic that's been on my mind for a while.
The underlying concepts are universal and common, determine what leads to what, 
but the skillset to make that determination is far less common.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://mixtape.scunning.com/images/cover.jpg" alt="Causal Inference Mixtape" style="width:400px"&gt; &lt;/p&gt;
&lt;p&gt;I'm choosing Causal Inference Mixtape in particular because it has lots of code examples in Python and R,
covers a wide range of practical models with real world context,
and is very well written.&lt;/p&gt;
&lt;p&gt;Most importantly its &lt;a href="https://mixtape.scunning.com/"&gt;open access&lt;/a&gt; making it accessible to anyone interested
though if you have the means you should buy a copy.
Purchasing a copy helps the publisher and author continue to put great work out in the open.&lt;/p&gt;
&lt;h2&gt;How to join&lt;/h2&gt;
&lt;p&gt;Add your email address to the mailing list using the form below.
&lt;div class="ml-form-embed"
  data-account="3479153:h8h4b4n7u8"
  data-form="5689564:h2f9s0"&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;!-- MailerLite Universal --&gt;

&lt;script&gt;
(function(m,a,i,l,e,r){ m['MailerLiteObject']=e;function f(){
var c={ a:arguments,q:[]};var r=this.push(c);return "number"!=typeof r?r:f.bind(c.q);}
f.q=f.q||[];m[e]=m[e]||f.bind(f.q);m[e].q=m[e].q||f.q;r=a.createElement(i);
var _=a.getElementsByTagName(i)[0];r.async=1;r.src=l+'?v'+(~~(new Date().getTime()/1000000));
_.parentNode.insertBefore(r,_);})(window, document, 'script', 'https://static.mailerlite.com/js/universal.js', 'ml');

var ml_account = ml('accounts', '3479153', 'h8h4b4n7u8', 'load');
&lt;/script&gt;

&lt;!-- End MailerLite Universal --&gt;

&lt;p&gt;I need to get all the technology first and send out an email with further details.
The second best is to follow me on &lt;a href="https://twitter.com/canyon289"&gt;Twitter&lt;/a&gt;.
You don't need to wait though, if you have ideas send me a message.&lt;/p&gt;</content><category term="Data Science"></category><category term="Community"></category></entry><entry><title>PyScript First Impressions</title><link href="/PyScriptFirstImpressions.html" rel="alternate"></link><published>2022-05-15T00:00:00+00:00</published><updated>2022-05-15T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2022-05-15:/PyScriptFirstImpressions.html</id><summary type="html">&lt;p&gt;PyScript is this awesome new tool that combines the browser with python, was released by the wonderful team at Anaconda,
and represents a paradigm change in browser capability.
I recently spent a number of hours testing it out and even got  PyMC to run (with some effort).
Longer thoughts below …&lt;/p&gt;</summary><content type="html">&lt;p&gt;PyScript is this awesome new tool that combines the browser with python, was released by the wonderful team at Anaconda,
and represents a paradigm change in browser capability.
I recently spent a number of hours testing it out and even got  PyMC to run (with some effort).
Longer thoughts below, but let's start wth the summary.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you're totally new to Python&lt;/strong&gt;:  PyScript is very cool but not ready day to day use yet.
Use something like Anaconda if you can install stuff locally, or repl.it, Binder, or Colab if you can't.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you're an educator&lt;/strong&gt;: This is going helpful in two ways.
First it'll smooth environment setup issues. Ideally eliminate it, students can just open a html file and get going.
The second is in access low to no internet environments, since all the code is client side it can load from a local file!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you're a data Professional&lt;/strong&gt;:  This is going to change the game.
Currently, Plotly/Plotly Dash are the most current analogous solutions,
but both require hosting and take a "server side" approach.
PyScript takes a "client side, no server needed" approach which is huge shift. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you're an OSS contributor&lt;/strong&gt;: Get your packages working on Pyodide ASAP.
As Peter explains in his talk your potential userbase will increase by over 10x&lt;/p&gt;
&lt;p&gt;The best source fo details is the &lt;a href="https://github.com/pyscript/pyscript"&gt;GitHub repo&lt;/a&gt;
or the &lt;a href="https://anaconda.cloud/pyscript-pycon2022-peter-wang-keynote"&gt;PyCON PyScript keynote&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My test code is here, and you can watch me code the whole thing &lt;/p&gt;
&lt;div style="text-align: center;"&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/uW6sWe7yO98?start=13712" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;h2&gt;What is Pyscript&lt;/h2&gt;
&lt;p&gt;From the &lt;a href="https://github.com/pyscript/pyscript"&gt;README&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PyScript is a meta project that aims to combine multiple open technologies into a framework that allows users to create sophisticated browser applications with Python. It integrates seamlessly with the way the DOM works in the browser and allows users to add Python logic in a way that feels natural both to web and Python developers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The way I see it&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's a way to get Python and other languages in front of people in an interface everyone is familiar
with (nearly) no install fuss&lt;/li&gt;
&lt;li&gt;A flexible tool to share and communicate data with professional colleagues, particularly ones
outside of my technical team&lt;/li&gt;
&lt;li&gt;A way for me to leverage the power of the internet and browser, in programming languages I'm comfortable with&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Current state and how you can help&lt;/h2&gt;
&lt;p&gt;As prominently displayed it's in an alpha state. 
However the Anaconda team is openly inviting contributors.
If you're a developer download the code and try it out, then either contribute directly to
PyScript and its associated libraries (Pyodide and micropython) or port other packages to the ecosystem.&lt;/p&gt;
&lt;p&gt;In the coming days I will add a section to this post with more in depth advice and tips.&lt;/p&gt;
&lt;h2&gt;Other Takes&lt;/h2&gt;
&lt;p&gt;Eric Ma has a &lt;a href="https://ericmjl.github.io/blog/2022/5/1/pyscript-python-in-the-web-browser/"&gt;great writeup&lt;/a&gt;
and embedded example with NetworkX which you should check out.
As I see more I'll append to this list&lt;/p&gt;
&lt;p&gt;&lt;meta name="twitter:card" content="summary_large_image"&gt;
&lt;meta name="twitter:creator" content="@canyon289"&gt;
&lt;meta name="twitter:title" content="A new tool in the toolbox"&gt;
&lt;meta name="twitter:description" content="Who doesn't love a new tool?!"&gt;
&lt;meta name="twitter:image" content="https://ravinkumar.com/images/SocialMedia/twitter/PyScript_Card.png"&gt;&lt;/p&gt;</content><category term="Programming"></category><category term="Programming"></category></entry><entry><title>Tips for getting a Data Scientist Job</title><link href="/GettingADSJob.html" rel="alternate"></link><published>2022-04-24T00:00:00+00:00</published><updated>2022-04-24T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2022-04-24:/GettingADSJob.html</id><summary type="html">&lt;h1&gt;My opinion on how to become a DS&lt;/h1&gt;
&lt;p&gt;If you're reading this, chances are you have reached out to me on {LinkedIn/Twitter/Github/Email} asking how become a data scientist. 
or your have read my post on how &lt;a href="/GettingAJob.html"&gt;to get a job&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are some important things to keep …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;My opinion on how to become a DS&lt;/h1&gt;
&lt;p&gt;If you're reading this, chances are you have reached out to me on {LinkedIn/Twitter/Github/Email} asking how become a data scientist. 
or your have read my post on how &lt;a href="/GettingAJob.html"&gt;to get a job&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are some important things to keep in mind:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Understand that Data Science is made up term that has little consistent meaning&lt;/li&gt;
&lt;li&gt;Figure out what the specific "thing" you like about the DS job really is&lt;/li&gt;
&lt;li&gt;Become excellent at it whatever way works best for you&lt;/li&gt;
&lt;li&gt;Do it in a way that sets you up to get the job&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let's elaborate on each of the points above&lt;/p&gt;
&lt;h2&gt;What is a Data Scientist and what do they do?&lt;/h2&gt;
&lt;p&gt;This is seemingly an obvious question to start with;
however, it is also the worst one. 
Hidden in the explanation of why this question is so bad lies a useful insight.&lt;/p&gt;
&lt;p&gt;The honest truth is that the term Data Science is completely made up.
Now you could say "Well Ravin everything is made up." 
But let's dig further.
Let's compare Data Science to my previous profession, mechanical engineering.
Mechanical engineering is a formalized process with long-running organizations that set standards for the field internationally,
such as the &lt;a href="https://en.wikipedia.org/wiki/American_Society_of_Mechanical_Engineers"&gt;American Society of Mechanical Engineers&lt;/a&gt;
or &lt;a href="https://en.wikipedia.org/wiki/ABET"&gt;ABET&lt;/a&gt;.
While the idea of mechanical engineering is made up by people,
there is a key group of influential people that are defining the "central identity" of Mechanical engineering.
There is no such group for data science. 
Everyone is making it up, in whatever way suits their narrative.&lt;/p&gt;
&lt;p&gt;On the abstract side Drew Conway was one of first to try and define Data Science with his popular Venn diagram.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Drew Conway Image" src="https://images.squarespace-cdn.com/content/v1/5150aec6e4b0e340ec52710a/1364352051365-HZAS3CLBF7ABLE3F5OBY/Data_Science_VD.png"&gt;&lt;/p&gt;
&lt;p&gt;While it's appealing in simplicity, it's quite unhelpful for newcomers,
as it's not clear where to start or what any of these things included in the diagram actually mean.&lt;/p&gt;
&lt;p&gt;Typical of data scientist writings someone then took a simple framework and made it even more complex,
unfortunately making it even less useful.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Complex DS Venn Diagram" src="http://georgejmount.com/wp-content/uploads/2016/04/1d115e30-ae3b-42a5-b86f-00b97797b787-original.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;On the other end some people try to strictly define data science by limiting its scope to exactly what they do.
They then post their opinions on Twitter and LinkedIn and arguments ensue,
which also doesn't help newcomers.&lt;/p&gt;
&lt;blockquote class="twitter-tweet tw-align-center"&gt;&lt;p lang="en" dir="ltr"&gt;In my particular data science role, I don&amp;#39;t currently use statistics. Or R. Or deep learning. But I also don&amp;#39;t go around telling people those aren&amp;#39;t useful in data science as though my job represents all data science work&lt;/p&gt;&amp;mdash; Ben Lindsay (@ben_j_lindsay) &lt;a href="https://twitter.com/ben_j_lindsay/status/1508067296115191809?ref_src=twsrc%5Etfw"&gt;March 27, 2022&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt; &lt;/p&gt;
&lt;p&gt;"But these are only individuals and their own views," you might say,
"Companies will clearly be more consistent." Wrong again.
Wrong again.
Companies like Lyft write publicly about &lt;a href="https://medium.com/@chamandy/whats-in-a-name-ce42f419d16c"&gt;relabeling all data analysts to scientists, and all data scientists to research scientists&lt;/a&gt; with no change in expected responsibilities. 
Doordash has various data scientist roles but when you dig deeper you learn those are not alike at all.
They are not interchangeable and have two separate organizational structures internally.&lt;/p&gt;
&lt;p&gt;So how else can we frame the problem?&lt;/p&gt;
&lt;h3&gt;A subset of a set of skills&lt;/h3&gt;
&lt;p&gt;Because I have been knighted with the title Data Scientist,
I'm legally obligated to provide my own take on this mess,
or at least make it worse.
Let's do that.&lt;/p&gt;
&lt;p&gt;I tend to think of data science as a subset of a set of skills.
This could include algorithm development, dashboarding, modeling fitting,
programming in Python, programming in SQL, fitting black box models, data communication,
deploying Spark cluster jobs,
the emotional numbness
of being asked to join two datasets with no common key,
knowing how to not laugh or express shock when your
stakeholders ask for models with 99% accuracy,
writing blog posts or tweet threads with advice
on how to become a data scientist (half-joking while doing it).&lt;/p&gt;
&lt;p&gt;Now some people with data scientist LinkedIn titles spend their time squeezing out .001 more
precision/recall/accuracy out of a black box model.
Sometimes this role is titled Machine Learning Engineer.
Some people find this kind of work to be fascinating.
I think it's very boring,
and when I was looking for a job, I would avoid these entirely.&lt;/p&gt;
&lt;p&gt;Instead, I like working with stakeholders to help them understand a complex business and use data
to make informed big-scale decisions.
Sometimes this role is called Decision Scientist,
and this is what I do at Google, where, surprise,
my title is Data Scientist,
which previously used to be called quantitative analyst.
What matters to me though is that I get to do what I enjoy,
which is learning things from data and sharing those learnings with others.&lt;/p&gt;
&lt;h2&gt;A suggested strategy&lt;/h2&gt;
&lt;p&gt;So let's focus back on you.
It's no secret the
&lt;a href="https://vickiboykis.com/2019/02/13/data-science-is-different-now/"&gt;junior data science field is completely saturated&lt;/a&gt;.
That given here are my suggestions for concrete steps on how to get a DS job.
This should help match you to the right company and 
put you ahead of many other candidates.&lt;/p&gt;
&lt;h3&gt;Step 1: Figure out what you like&lt;/h3&gt;
&lt;p&gt;Instead of trying to nail down a specific definition of DS
start with trying to understand what about DS is interesting to you
and once you find the things about DS that make you tick,
and start excelling at those. 
It's a more focused strategy than trying to be good at everything
which will  ultimately prove impossible. 
If you go with "good at everything strategy" you won't be able to 
stand out in any interview as each company tends to look for 
&lt;em&gt;specific&lt;/em&gt; skills and knowledge.&lt;/p&gt;
&lt;h3&gt;Step 2: Get good at it&lt;/h3&gt;
&lt;p&gt;Now that you've narrowed down the part of DS that interest you the most,
figure out how to be great at it.&lt;/p&gt;
&lt;p&gt;If you're into black box predictions, places like Kaggle are the obvious answer.
If you really like academic algorithm development papers and algorithm
competitions would be a good area to focus on.&lt;/p&gt;
&lt;p&gt;For me that learning came in the form of Open Source contributions. 
By writing code and working with others I was able to more deeply learn the methods.
It also helped because the networking and public display
of value was built right in,
which I write about in my &lt;a href="/GettingAJob.html"&gt;How to get a job post&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Step 3: Identify the adjacent skills&lt;/h3&gt;
&lt;p&gt;Find people that are excellent at what you want to learn and find places where they
share their experience, whether it be writings, podcasts, conference talks etc.
Write down all the skills and useful things they mention.
For instance if they work on big prediction models are they also good at 
deploying them, or are they more focused on the internal mathematics?
Do this again for multiple persons in your field of interest
then see what other skills are commonly listed or mentioned and become proficient in those as well.&lt;/p&gt;
&lt;p&gt;In my case I often noticed a stronger emphasis on communication, intuition,
and an explanation versus model accuracy metrics.
I also saw these folks contributing examples publicly in blog posts,
talks, and open source notebooks.
I now spend much of my time honing those skills, 
writing this blog post for example.&lt;/p&gt;
&lt;h3&gt;Step 4: Figure out what organizations value your skills&lt;/h3&gt;
&lt;p&gt;By this point you'll have a good sense for the code words that appeal to you.
Look for job postings that specifically contain the thing you're interested in.
During the interview be sure to ask how DS provides value to that team you're about to join.
Even if you get rejected you'll have extra clues as to what to
focus on for the next interview.
Demetri Pananos provides &lt;a href="https://dpananos.github.io/posts/2022/01/blog-post-36/"&gt;additional advice&lt;/a&gt; on his blog.&lt;/p&gt;
&lt;h2&gt;Best of luck&lt;/h2&gt;
&lt;p&gt;Unfortunately the data scientist job search is more of a random search than
a strict, precise process.
Nonetheless, if you're dead set on getting a Data Scientist job I hope the
advice you got here will help.
And once you get a DS job be sure to send me a link to your blog post or
tweet thread sharing your advice. 
At that time you too will become a true data scientist.&lt;/p&gt;
&lt;p&gt;&lt;meta name="twitter:card" content="summary_large_image"&gt;
&lt;meta name="twitter:creator" content="@canyon289"&gt;
&lt;meta name="twitter:title" content="Tips for getting a DS job"&gt;
&lt;meta name="twitter:description" content="Advice for a DS Job Seeker"&gt;
&lt;meta name="twitter:image" content="https://ravinkumar.com/images/SocialMedia/twitter/DS_Job_Card.png"&gt;&lt;/p&gt;</content><category term="Data Science"></category><category term="Interview"></category></entry><entry><title>Getting that job at that one company that you think is cool</title><link href="/GettingAJob.html" rel="alternate"></link><published>2022-04-17T00:00:00+00:00</published><updated>2022-04-17T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2022-04-17:/GettingAJob.html</id><summary type="html">&lt;p&gt;If you're reading this you chances are have reached out to me on &lt;code&gt;{LinkedIn/Twitter/Github/Email}&lt;/code&gt;
asking how to get a job at &lt;code&gt;{Google/SpaceX/Sweetgreen/Some other company}&lt;/code&gt;.
If so this post is for you. 
Instead of a short 280 character response,
or an off-the-cuff reply,
I believe …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you're reading this you chances are have reached out to me on &lt;code&gt;{LinkedIn/Twitter/Github/Email}&lt;/code&gt;
asking how to get a job at &lt;code&gt;{Google/SpaceX/Sweetgreen/Some other company}&lt;/code&gt;.
If so this post is for you. 
Instead of a short 280 character response,
or an off-the-cuff reply,
I believe you deserve a more detailed answer.&lt;/p&gt;
&lt;h2&gt;Why I shouldn't be the only one you listen to&lt;/h2&gt;
&lt;p&gt;Before reading the restoof the post you should know the following.&lt;/p&gt;
&lt;h3&gt;I'm only one single person&lt;/h3&gt;
&lt;p&gt;The truth is that any individual tends to be biased,
when it comes to both how they experience things around them
and how they tell their experience.&lt;/p&gt;
&lt;blockquote class="twitter-tweet tw-align-center" data-conversation="none" data-lang="en" data-theme="light"&gt;&lt;p lang="en" dir="ltr"&gt;People have been repeating that nonsense forever &lt;br&gt;&lt;br&gt;Remember that successful people can often be highly biased to think that other successful people have to be just like them, it’s simply not true at all&lt;/p&gt;&amp;mdash; Hamel Husain (@HamelHusain) &lt;a href="https://twitter.com/HamelHusain/status/1507757669867667456?ref_src=twsrc%5Etfw"&gt;March 26, 2022&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt; &lt;/p&gt;
&lt;p&gt;So you're welcome to read my tips and get the most out of them,
but you shouldn't limit yourself to only my perspective and knowledge.
You should also look for other people's experience so that you could get difference experiences
and from your own independent conclusion.&lt;/p&gt;
&lt;p&gt;Which brings me to my second point&lt;/p&gt;
&lt;h3&gt;Survivorship Bias&lt;/h3&gt;
&lt;p&gt;&lt;img src="/images/GettingAJob/SurvivorshipBias.png"/&gt;&lt;/p&gt;
&lt;p&gt;Only looking for successful cases without considering failures has a name,
it's called survivorship bias.&lt;/p&gt;
&lt;p&gt;When forming a strategy be sure to consider two different categories of folks.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;People that have applied for the job that interest you but didn't get it&lt;/li&gt;
&lt;li&gt;People who had that job and decided to quit&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The second group provides the most valuable feedback. For example,
I can tell you why I joined &lt;em&gt;and&lt;/em&gt; left SpaceX, but I can't
tell you why I left Google because I haven't left yet. 
Mindfully choose where your information comes from and balance it accordingly.&lt;/p&gt;
&lt;h2&gt;so, why am I here writing this?&lt;/h2&gt;
&lt;p&gt;Now that you know I'm offering my own perspective which is biased it might seem
pointless for me to say anything at all.
Yet again, there are three reasons why I still want to do it.&lt;/p&gt;
&lt;h3&gt;I was once like you&lt;/h3&gt;
&lt;p&gt;At the start of my career,
just like you today,
I also wanted to get into particular organizations and companies.
I didn't really know how to do it, so I tried things like cold emailing people.
And when people would respond, even with a short response, that gave me a lot of hope.&lt;/p&gt;
&lt;h3&gt;I want to counteract the bad advice out there&lt;/h3&gt;
&lt;p&gt;The other thing I often did was to google "How to get a job at ..."
Now that I've worked at these companies, and more importantly
conducted interviews as part of my job in these companies,
I know that a lot the advice out there is factually false. &lt;/p&gt;
&lt;p&gt;And now that when people like you are reaching out to me asking for help with landing a dream job,
I feel I should provide some useful direction
even if those directions potentially biased. In other words&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;wrong data &amp;lt; missing data &amp;lt; biased data&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;I want to use time efficiently&lt;/h3&gt;
&lt;p&gt;I can't give every person that pings me a 1:1 session,
it would overwhelm me. 
Additionally providing 1:1 consultation would just be inefficient
as the majority of my advice to you would be the same.
I believe the most reasonable thing is to write down down my suggestions,
so that you can get your questions answered in the most scaleable way.
Hope this helps! With that lets dive into it&lt;/p&gt;
&lt;h2&gt;"How can I get a job at XYZ company?"&lt;/h2&gt;
&lt;p&gt;Here are some possible (and questionable) strategies!&lt;/p&gt;
&lt;h3&gt;Ask for blind referrals or advice&lt;/h3&gt;
&lt;p&gt;You're told to go to LinkedIn, find all the people who work at Google,
or at the company that interests you and direct message them your resume.&lt;/p&gt;
&lt;h3&gt;Resume Engineering&lt;/h3&gt;
&lt;p&gt;You're advised to focus entirely on your resume. 
You fill your resume with lots of programming languages and the latest buzzwords.
The more the better. &lt;/p&gt;
&lt;h3&gt;Getting your information from clickbait sources&lt;/h3&gt;
&lt;p&gt;You google common interview questions for company XYZ and memorize them. 
Here's one for SpaceX.&lt;/p&gt;
&lt;p&gt;You're standing on the surfce of the earth,
walk one mile south, one mile east, one mile north, and end up at the same point.
Where are you?
Know the answer yet?
In fact this is &lt;a href="https://www.topinterview.com/interview-advice/how-to-answer-Elon-Musks-favorite-interview-question"&gt;Elon Musk's favorite question!&lt;/a&gt;
according to topinterview.com!&lt;/p&gt;
&lt;h3&gt;Narrow focus&lt;/h3&gt;
&lt;p&gt;Many people believe there is that "one company" or that "one perfect job opening"
that is perfect for them.
Maybe its even a couple of those,
or it may be one of the FAANG companies.
If you focus on that one company or one position as your next step you'll surely make it.&lt;/p&gt;
&lt;h3&gt;Keep trying the same thing over and over&lt;/h3&gt;
&lt;p&gt;At this point I'm sure you've heard stories about Michael Jordan taking 10,000 shots
or Steve Jobs getting fired from Apple. 
From this it's easy to believe "If you fail just try doing the exact same thing again until you suceed!"
After all how can we achieve success if we're not ready to repeatedly fail?&lt;/p&gt;
&lt;h2&gt;These are all losing strategies!&lt;/h2&gt;
&lt;p&gt;I tried each and every one of these strategies earlier in my career, 
and all turned out to be quite ineffective for me.&lt;/p&gt;
&lt;p&gt;I can understand the appeal, these strategies are
directly geared toward to your end goal,
which is getting a job. 
It feels like "If I just fix my resume, or find that one referral
or check all the boxes for SpaceX I'll make it in."
The biggest downside of these strategies excessively focus
on the company you're trying to get which leaves
you reacting to what you think they want rather
than building up yourself and your vlaue in the job market.&lt;/p&gt;
&lt;h2&gt;More viable strategies&lt;/h2&gt;
&lt;p&gt;Here's some steps that I believe are more effective.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Whatever project or task you're working on,
Do the best work you can in a way that relates to your desired position.&lt;/li&gt;
&lt;li&gt;Be able to articulate the details of your work adnd why it brings value&lt;/li&gt;
&lt;li&gt;Showcase that work in a way that builds your reputation&lt;/li&gt;
&lt;li&gt;Trust your recruiter (if you have one)&lt;/li&gt;
&lt;li&gt;If don't get the job, &lt;strong&gt;adjust&lt;/strong&gt; and try again&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Instead of focusing on getting into a specific company or position as your
primary outcome I strongly suggest focusing on doing
your best work wherever you can. 
This builds a solid foundation of your aptitude
for a particular kind of work
which is what organizations are looking for. 
This should be the focal point  of your effort.&lt;/p&gt;
&lt;p&gt;Be able to explain what your work is, what it includes, and why it is valuable.
For example if you're working on a machine learning project be able to explain
the details of your model, and why your model is best suited to
produce value with the choices you've made. Be able to explain
why other choices would be less valuable. &lt;/p&gt;
&lt;p&gt;There's the whole adage of "If a tree falls in the forest does it  make a sound?"
Find ways to showcase your work in a way that ensures your work gets noticed.
If you're in college join clubs  where your peers can see your work and achievements. 
If you are working in a company present your work internally,
as your colleagues may end up working at the companies you'd like to join
and be able to vouch for skill and experience. &lt;/p&gt;
&lt;p&gt;If you do all of this your resume and your network of contacts will be created
naturally as a byproduct of your efforts rather needing to be the direct focus.
And instead of you needing to reach out to companies, 
people will start reaching out to you, and you'll be able to land an interview
which brings us to the final point.&lt;/p&gt;
&lt;p&gt;Once you start talking to a recruiter,
do whatever you can to become their best candidate.
Recruiter's entire job is to recruit, and really they &lt;em&gt;want you&lt;/em&gt; to join the organization
they're representing, ideally the one you're hoping to join.
They'll have insights on what works and what doesn't
and while they may not be able you all the answers you want,
they will give you really strong suggestions on of how to get the position you want.
Treat them as the strategic partners they are and take their advice.&lt;/p&gt;
&lt;p&gt;If you get the job great! Even If you don't get the job
you've the recruiter built a good relationship with them they'll likely give you useful feedback,
which you can use to adjust your strategy for your next try.
Again though don't focus solely on that one company, or one interview.
Go back to the earlier steps and keep building your expertise and communication skills
until you get another shot.&lt;/p&gt;
&lt;p&gt;I hope these suggestions laid out above help you get the job you're looking for.
I know you were where looking for personal advice,
and it may feel impersonal that I've instead sent you a link to this essay
so let me offer you some additional help.
Ping me again with a specific question and send me the sum of numbers of today's isoformat date.
With that I'll know you have read this and will be able to better help you in more detail.&lt;/p&gt;
&lt;h2&gt;My own story: 0% first time success rate&lt;/h2&gt;
&lt;p&gt;Know that I've been rejected by all the jobs you see on my resume
on my resume at least once. Every. Single. One.
Just because you're not in whatever company right now and just because you got rejected
it doesn't mean you aren't good enough. 
Instead of focusing on their decision about your job application, focus on yourself.
and keep working to be the best you can be.&lt;/p&gt;</content><category term="Data Science"></category><category term="Interview"></category></entry><entry><title>Random Variable Algebra Simulation and Intuition</title><link href="/RandomVariableAlgebra.html" rel="alternate"></link><published>2021-09-22T00:00:00+00:00</published><updated>2021-09-22T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2021-09-22:/RandomVariableAlgebra.html</id><summary type="html">&lt;p&gt;Random Variable Algebra can be challenging to understand mathematically and can sometimes
feel counterintuitive. Things that have helped me are learning the wrong ways to perform
RV Algebra as well as numerical simulation, both of which are presented in the notebook below.&lt;/p&gt;
&lt;p&gt;A recording of me talking over slides is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Random Variable Algebra can be challenging to understand mathematically and can sometimes
feel counterintuitive. Things that have helped me are learning the wrong ways to perform
RV Algebra as well as numerical simulation, both of which are presented in the notebook below.&lt;/p&gt;
&lt;p&gt;A recording of me talking over slides is available &lt;a href="https://www.youtube.com/watch?v=6BklWi2b6vY"&gt;on Youtube&lt;/a&gt;.
You can download the notebook &lt;a href="https://github.com/canyon289/canyon289.github.io/tree/master/dev/content/notebooks/Random_Variable_Algebra.ipynb"&gt;from Github&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Happy Learning!&lt;/p&gt;
&lt;p&gt;{% notebook Random_Variable_Algebra.ipynb cells[0:] %}&lt;/p&gt;</content><category term="Statistics"></category><category term="Statistics"></category></entry><entry><title>How positive outcomes are correlated with physical activity</title><link href="/WhyFitness.html" rel="alternate"></link><published>2021-06-07T00:00:00+00:00</published><updated>2021-06-07T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2021-06-07:/WhyFitness.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;tldr&lt;/strong&gt; A structured fitness plan can greatly improve your career and your quality of life as a knowledge worker.
Ignoring your health may work in the short term but will catch up to you slowly and subtly.
I say this as someone who neglected my health while trying to get …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;tldr&lt;/strong&gt; A structured fitness plan can greatly improve your career and your quality of life as a knowledge worker.
Ignoring your health may work in the short term but will catch up to you slowly and subtly.
I say this as someone who neglected my health while trying to get ahead at work,
and as someone who then subsequently spent years losing the weight and 
getting back to a healthier state.
It is &lt;em&gt;really really really&lt;/em&gt; worth it to find ways to include a baseline level of physical activity in your life.
It will yield dividends in more ways than you can anticipate.&lt;/p&gt;
&lt;p&gt;Most exercise related posts are either written for too general an audience, written for fitness professionals, or are total scams.
I'm writing this blog post to hopefully show other knowledge workers that transformational change &lt;em&gt;is possible&lt;/em&gt; 
and worth it, even if for no other reason than to make you a better knowledge worker.&lt;/p&gt;
&lt;p&gt;If you'd like me to write more about this topic, send me an email, or @ me on &lt;a href="www.twitter.com/canyon289"&gt;twitter&lt;/a&gt;,
or however else you can get a hold of me.
I am happy to &lt;a href="https://en.wikipedia.org/wiki/Open_source_(disambiguation)"&gt;open source&lt;/a&gt; my knowledge just like I open source my code.&lt;/p&gt;
&lt;h2&gt;So why am I posting this?&lt;/h2&gt;
&lt;p&gt;I have a hypothesis that many desk-bound folks are unaware of all the benefits that physical activity can have
specifically on one's career or on their lives in general. 
I also think we tend to too easily sacrifice our long-term health for our career. 
I say this from experience.
I went from being a skinny nerd an overweight nerd because I was "too career focused".
I found myself in a situation where, frankly, life just "didn't feel great".&lt;br&gt;
For many reasons I had to make a change, and after much concerted effort,
I've been able to make meaningful progress, so
I want to definitively state &lt;em&gt;the benefits are greater in number and in magnitude than I ever expected&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For one, for the first time ever I am not embarrassed about my appearance.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/WhyFitness/BeachPicture.JPG"/&gt;&lt;/p&gt;
&lt;p&gt;But aside from that I've discovered numerous benefits that I can apply in my knowledge-work career.&lt;/p&gt;
&lt;p&gt;Before that though, a disclaimer - I'm definitely not a medical professional.
These observations are based on my own experience. 
I am a professional statistician though and I can say that is not controlled study either;
At best it is a biased observational study with a sample of one - me.
However I feel like I &lt;em&gt;have&lt;/em&gt; to share something,
since I've gone from feeling pretty poorly each day and being warned about my weight by a doctor to feeling so much better.
So I'm writing in that hope that it inspires someone to be a better version of themselves. 
I genuinely believe that becoming a better version of yourself is  more possible and even more beneficial than you may think.&lt;/p&gt;
&lt;h2&gt;So let's get to it already; What is better?&lt;/h2&gt;
&lt;p&gt;I'll primarily speak to the short-term benefits because I don't want to wait 50 years to write this blog post.
I've experienced the usual ones you read about including increased energy, better sleep, and improved mood. 
For instance I no longer experience random pains when I wake up and in general I feel like more of my days in general are less of a slog. &lt;/p&gt;
&lt;p&gt;But more specifically, I find that this lifestyle change comes with a host of benefits for knowledge workers.
For me those benefits have ranged from specific physical improvements related to desk work to more holistic changes.
Overall, I believe it has put me in a better position to navigate my career with more productivity and reduced anxiety. 
Below I'll talk about the benefits in greater detail.&lt;/p&gt;
&lt;h3&gt;Desk work doesn't hurt anymore&lt;/h3&gt;
&lt;p&gt;Typing used to hurt-literally.
After using a keyboard for an extended period of time I used to experience wrist pain and I had to take breaks.
I was 27 at the time so my body failing me a was a new phenomenon.
It also affected my work output and I still remember the occasional days when I'd have to grit my teeth through the pain to get something done to meet a deadline.
But now I'm happy to report that all my desk related pain is gone and most pain in general.
For me weightlifting was a better fix for desk ergonomics than any tutorial I read online or seminar I attended at work&lt;/p&gt;
&lt;h3&gt;Increased mental focus&lt;/h3&gt;
&lt;p&gt;Strenuous physical exercise enhances your focus and mental toughness. 
With knowledge work its easy to &lt;em&gt;feel&lt;/em&gt; productive when you're  multitasking and not actually focused or when your mind is wandering. 
Conversely it's really hard to multitask when you're physically exerting yourself. 
Your performance notably drops. 
The focus trained in physical exercise has helped me stay in &lt;a href="https://en.wikipedia.org/wiki/Flow_(psychology)"&gt;flow states&lt;/a&gt; to get more &lt;a href="https://www.calnewport.com/books/deep-work/"&gt;deep work&lt;/a&gt; done.&lt;/p&gt;
&lt;h3&gt;Self-owned Objective goals&lt;/h3&gt;
&lt;p&gt;It's hard to objectively measure knowledge work. 
Ideas are largely judged by other humans and the measure is largely subjective. 
Physical-activity goals, by contrast, are much more tangible. 
It's relatively simple to measure progress by steps taken, weight lifted, duration biked.
In particular, the time from goal initiation to final measurement usually happens within the day, whereas in knowledge work it can take years.&lt;/p&gt;
&lt;p&gt;When I was entirely focused on my career I used to get anxiety about the possibility of a project not being well received, or about missing out on a promotion.
What was happening was all progress and accomplishments were being measured by others. 
With my fitness goals I now have a portion of my life where progress is owned entirely by me.
Self owned goals has reduced the pressure I put on myself, as I no longer use work as the sole measure of life progress.&lt;/p&gt;
&lt;h3&gt;Faster feedback loop&lt;/h3&gt;
&lt;p&gt;Before when I missed a day of sleep I would mask the effects with caffeine and ignore my reduced mental performance.
It'd take a week or so of poor sleep habits before the effects became problematic  enough for me to correct them.
Now, these lack-of-sleep regressions show up more quickly in my physical output levels, especially through the objective measurement I mentioned above.
The same goes for stress levels or lack of mental focus at work. 
Since the physical detriment shows up quickly I'm able to self-correct much faster especially before it affects my knowledge work too severely. &lt;/p&gt;
&lt;h3&gt;Increased confidence in navigating my career&lt;/h3&gt;
&lt;p&gt;"Knowing things" is the bare minimum for a knowledge career.
Being able to clearly communicate ideas, tactfully push back on requests,
or state your own self worth in situations such as performance reviews are important skills in intentionally controlling your destiny.
It's hard to do those things when you don't feel confident in yourself.
Even though the amount of weight I can lift, or the composition of my body should be independent of my self confidence,
I find that, for me,  they are correlated.
Put simply, improvements in my "physical" self have made me more confident in my "knowledge" self.
I don't wake up wishing I were someone else or thinking that I have to "fake it" to "make it".&lt;/p&gt;
&lt;h2&gt;Downsides&lt;/h2&gt;
&lt;p&gt;For all the upsides of changing my lifestyle I should mention the downsides. 
As you can probably guess I feel the upsides far outweigh the downsides in my case, but I will list downsides I experienced here so you can judge for yourself.&lt;/p&gt;
&lt;h3&gt;It takes active planning, effort&lt;/h3&gt;
&lt;p&gt;You really do have to think about what you want to do, why you want to do it, and how to get there.
Then you actually have to do it which can be a slog.
Reading Hacker News or eating unhealthy foods is easier and comfortable in the short term.
This downside can be mitigated by making changes of a smaller magnitude,
but then it takes longer for results to appear.
Bottom line, a level of dedication and patience is essential..&lt;/p&gt;
&lt;h3&gt;It's harder at the beginning&lt;/h3&gt;
&lt;p&gt;All the above is compounded at the start, when you are not getting any of the benefits,
but you're definitely paying the upfront costs of all the planning, confusion, and lack of experience. 
Like anything changing your lifestyle is a learned skilled and it takes time
to figure everything out before it becomes second nature. &lt;/p&gt;
&lt;h3&gt;It can take time&lt;/h3&gt;
&lt;p&gt;The whole process takes time, the most valuable commodity-especially for knowledge workers.
I personally learned to mitigate the "time loss" through a number of strategies
but the fact remains that I need to set aside dedicated hours in my week.
Now I think my peers use time as an excuse to justify avoiding the work but that's a topic for another blog post&lt;/p&gt;
&lt;h3&gt;Lack of instruction relevant for working professionals&lt;/h3&gt;
&lt;p&gt;A lot of the content available is not targeted for working
professionals. Even if we ignore the blatant scams, much of the material is written
for &lt;em&gt;professional&lt;/em&gt; athletes or actors who can work out twice a day
or eat six carefully measured meals. Cracking open a Tupperware container full of tilapia
each day during multiple meetings each day doesn't fit my life. 
The all-in or not-at-all mentality is a non starter. 
It took a while for me to piece together what worked in my situation, without me losing my job, and it likely will for you too.&lt;/p&gt;
&lt;h2&gt;So where can you go from here?&lt;/h2&gt;
&lt;p&gt;If you're compelled to make a change my first suggestion is to give it some thought and write down a specific goal you'd like to achieve.
This is no different than writing down precise objective functions for a statistical model
or setting a concrete goal for a team. Saying you want your model to be "more accurate"
is about as imprecise as saying "you want to walk more everyday." &lt;/p&gt;
&lt;p&gt;The quote “A problem well-defined is a problem half solved.” is applicable here.&lt;/p&gt;
&lt;p&gt;For example here are my goals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I was unhappy with my body composition. After conducting a lot of internet research I determined that I wanted to somewhere around 10% body fat&lt;/li&gt;
&lt;li&gt;I am particularly inspired by people with high strength performance capabilities, so I've decided that I'd like to be able to deadlift 500 pounds squat 400 pounds, and bench 300 pounds. &lt;/li&gt;
&lt;li&gt;I'd also like to be able to perform &lt;a href="https://www.youtube.com/watch?v=vpPjY4BtJuI"&gt;ring muscle up&lt;/a&gt; with ease.
   This one is not such a well-defined goal but since it's a sub goal of the one above I'm ok with adding it here.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are just some examples: if you'd like to know my other goals feel free to ask.&lt;/p&gt;
&lt;h2&gt;Should I keep writing about these topics?&lt;/h2&gt;
&lt;p&gt;I really believe in the power of sharing ideas and knowledge with others.
It's why so I'm so committed to "open source" codes and communities, and it's something I believe applies here as well&lt;/p&gt;
&lt;p&gt;I can also share what I know about topics like &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Physical fitness as a knowledge worker&lt;/li&gt;
&lt;li&gt;Strength training with a "9-to-5" schedule&lt;/li&gt;
&lt;li&gt;My particular strategy and results for strength gain and fat loss&lt;/li&gt;
&lt;li&gt;Anything else you'd like me to share&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If interested get in touch with me. I'm happy to share!&lt;/p&gt;
&lt;h2&gt;P.S. Weightlifting is really fun (for everyone)&lt;/h2&gt;
&lt;p&gt;Lastly I'm most proud of my powerlifting ability, much more so than I am of
my physical appearance. Here's a picture of a recent deadlift.&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/WhyFitness/Deadlifting.png"/&gt;&lt;/p&gt;
&lt;p&gt;Powerlifting isn't "just for men either". Below my super awesome role model mom is also performing a deadlift. 
She didn't start weightlifting until her 40s so don't let
either age or gender hold you back. If you've been curious about trying out
strength training I encourage you to give it a try!&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/WhyFitness/MomWeightLifting.png"/&gt;&lt;/p&gt;</content><category term="Life"></category><category term="Life"></category></entry><entry><title>Migrating from TravisCI to Azure Pipelines</title><link href="/AzurePipelines.html" rel="alternate"></link><published>2019-06-02T00:00:00+00:00</published><updated>2019-06-02T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2019-06-02:/AzurePipelines.html</id><summary type="html">&lt;p&gt;I'm in the process of testing out Azure Pipelines
with &lt;a href="https://arviz-devs.github.io/arviz/"&gt;ArviZ&lt;/a&gt;, and in
the process have learned more about the platform. I'll share
my motivation as well as some tips.&lt;/p&gt;
&lt;p&gt;Note that this is a live blog post that I'll continue to
update as a I learn more.&lt;/p&gt;
&lt;h1&gt;Motivation&lt;/h1&gt;
&lt;p&gt;Many …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm in the process of testing out Azure Pipelines
with &lt;a href="https://arviz-devs.github.io/arviz/"&gt;ArviZ&lt;/a&gt;, and in
the process have learned more about the platform. I'll share
my motivation as well as some tips.&lt;/p&gt;
&lt;p&gt;Note that this is a live blog post that I'll continue to
update as a I learn more.&lt;/p&gt;
&lt;h1&gt;Motivation&lt;/h1&gt;
&lt;p&gt;Many Open Source projects on free tiers of services quite heavily.
TravisCI was one of those vendors which provided a free tier for 
open source but after its acquisition its future is uncertain.&lt;/p&gt;
&lt;p&gt;At the same time Microsoft seems to be heavily investing in open
source, through acquisitions like GitHub and by open sourcing projects
like VScode.&lt;/p&gt;
&lt;p&gt;Practically speaking Microsoft is also offering more parallel builds and longer runtime
than TravisCI. PyMC3 recently ran into TravisCI's 50 minute build limit and we had to do some hacky
stuff to get around it. Having 6 hours of build time in Azure is very convenient.&lt;/p&gt;
&lt;p&gt;Due to these reasons we are trying both services in parallel to see which is a better
fit for ArviZ given current circumstances.&lt;/p&gt;
&lt;h2&gt;Tips&lt;/h2&gt;
&lt;p&gt;This section is a grab bag of tips from my ramp up to Azure. I'll be
updating it as I learn more.&lt;/p&gt;
&lt;h2&gt;Skip the main docs initially&lt;/h2&gt;
&lt;p&gt;One upside of Azure is that it's more flexible than TravisCI, but it's
also more complicated and the docs aren't great. I would advise skipping
to the &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/migrate/from-travis?view=azure-devops"&gt;migration&lt;/a&gt;
section of the docs so you can start from known ground, before working
into Azure's complexity.&lt;/p&gt;
&lt;p&gt;I also found this blog post from &lt;a href="https://hynek.me/articles/simple-python-azure-pipelines/"&gt;Hynek Schlawack&lt;/a&gt;
to be quite helpful.&lt;/p&gt;
&lt;h2&gt;Read others implementations&lt;/h2&gt;
&lt;p&gt;It's a lot easier to see the functionality if you look for other people's code.
I referenced &lt;a href="https://github.com/ericmjl/pyjanitor/tree/dev/.azure-pipelines"&gt;PyJanitor's&lt;/a&gt;
implementation as a reference for mine.&lt;/p&gt;
&lt;p&gt;For your aid here's both our &lt;a href="https://github.com/arviz-devs/arviz/blob/master/.travis.yml"&gt;TravisCI yaml file&lt;/a&gt;
and our &lt;a href="https://github.com/arviz-devs/arviz/pull/688/files"&gt;Azure Pipelines&lt;/a&gt;
PR for a one to one comparison.&lt;/p&gt;
&lt;h2&gt;Docs exist for most major languages&lt;/h2&gt;
&lt;p&gt;Specific documentation exists for common workflows in common languages.
For example this &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/python?view=azure-devops"&gt;python&lt;/a&gt;
doc was particularly helpful as ArviZ is written in Python. &lt;/p&gt;
&lt;h2&gt;Azure Pipelines has built in code coverage and test stats&lt;/h2&gt;
&lt;p&gt;Coveralls, codecov, and other provide great free tiers for their services
but integration isn't always straightforward. In ArviZ's case Coveralls
doesn't have an "out of the box" solution for Azure Pipelines yet.&lt;/p&gt;
&lt;p&gt;Luckily Azure Pipelines has a bunch of these services built in as tasks.
Having things in one place is convenient should mean a lesser chance 
of coverage or testing tools breaking.&lt;/p&gt;
&lt;h2&gt;Tasks are like functions&lt;/h2&gt;
&lt;p&gt;I found the docs for tasks to be particularly confusing and it took me a while
to latch onto the central concept, so in attempt to help here's my two liner.   &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Tasks are like functions, they take inputs and then they "do a thing".
You can add tasks to your CI pipeline by copying a task block into your 
YAML file&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Here's an example of the &lt;a href="https://github.com/arviz-devs/arviz/blob/cb2a43d3882cbe1fd084d0a863be7bdaeb0a7ab5/azure-pipelines.yml#L85"&gt;Code Coverage task&lt;/a&gt; from ArviZ in context. The official documentation
shows &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/index?view=azure-devops"&gt;some screenshots&lt;/a&gt;
, but after hours of clicking around I never found it and ended up realizing
that that WebGUI was not needed.&lt;/p&gt;
&lt;h2&gt;What's next&lt;/h2&gt;
&lt;p&gt;We're going to trial both CI pipelines with ArviZ to see which one we should
move forward with. When we know I'll update this blog post. Happy CIing.&lt;/p&gt;</content><category term="Programming"></category><category term="Programming"></category><category term="Infra"></category></entry><entry><title>Now Available: Reference Sheets</title><link href="/NowAvailableReferenceSheets.html" rel="alternate"></link><published>2019-01-26T00:00:00+00:00</published><updated>2019-01-26T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2019-01-26:/NowAvailableReferenceSheets.html</id><summary type="html">&lt;p&gt;When learning new material I find it challenging immediately recall all
the nuances of a particular term. As a learning strategy I frequently
create flashcards and reference sheets to reinforce my understanding, and 
server as external memory. And for the first time I'm publishing them
for others to use as …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When learning new material I find it challenging immediately recall all
the nuances of a particular term. As a learning strategy I frequently
create flashcards and reference sheets to reinforce my understanding, and 
server as external memory. And for the first time I'm publishing them
for others to use as well.&lt;/p&gt;
&lt;p&gt;You can find them in on the blog sidebar under the &lt;em&gt;References&lt;/em&gt; section.&lt;/p&gt;
&lt;p&gt;For now it contains a Bayesian Glossary, a quick reference for common terms
used Bayesian statistics conversation. Coming soon will be a Bayesian Inference
methods cheatsheet, and a Tensorflow cheatsheet as well. Feel free
to contact me if you have a specific request. And happy learning!&lt;/p&gt;</content><category term="Programming"></category><category term="Education"></category><category term="Cheat Sheet"></category></entry><entry><title>Better Data Science CI with Docker</title><link href="/DockerforDS.html" rel="alternate"></link><published>2019-01-20T00:00:00+00:00</published><updated>2019-01-20T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2019-01-20:/DockerforDS.html</id><summary type="html">&lt;p&gt;Know the feeling when you use a tool that "just works"? instead of feeling
like you're wasting time and growing frustrated, you end up being more productive?  &lt;/p&gt;
&lt;p&gt;For Bayesian practitioners, one such tool is ArviZ.
This Python package allows users to perform detailed exploratory analyses
of Bayesian models. Bayesian practitioners …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Know the feeling when you use a tool that "just works"? instead of feeling
like you're wasting time and growing frustrated, you end up being more productive?  &lt;/p&gt;
&lt;p&gt;For Bayesian practitioners, one such tool is ArviZ.
This Python package allows users to perform detailed exploratory analyses
of Bayesian models. Bayesian practitioners should be able to use their inference library of choice,
and be able to visualize their results, with no pain and no time taken away
from the real work-interpreting results.&lt;/p&gt;
&lt;p&gt;ArviZ developers have the same expectations for the Continuous Integration pipeline
It should "just work", so the focus on stays on writing new functionality for users,
not feeling frustrated with flaky infrastructure.&lt;/p&gt;
&lt;p&gt;Unfortunately things didn't go as planned. Our Continuous Integration (CI) experience &lt;strong&gt;was&lt;/strong&gt;
frustrating, not just for us, but particularly for volunteer contributors
that were submitting great code only to have the CI process abort with
an obscure failure message. 
The CI process needs to be smooth,
partly because the code should be tested and verified, but more so 
to avoid wasting contributors time and ensure they have a great experience.
After all, the most finite resource is people's willpower, time, and enthusiasm.&lt;/p&gt;
&lt;p&gt;In other words...
&lt;img alt="Arviz Developer Experience" src="/images/DockerForDataScience/MarieKondo.png"&gt;&lt;/p&gt;
&lt;p&gt;To keep developers joyful we've moved to a Docker-based
Continuous Integration system. In this post, I'll 
detail the issues we were having with CI, why we started
using Docker in our CI, general instructions on how it all works,
and along with a grab bag of tips.&lt;/p&gt;
&lt;h2&gt;The tale of 5 deep learning frameworks, a local machine, and a remote virtual machine&lt;/h2&gt;
&lt;p&gt;While installing one deep learning framework can be a challenging experience,
installing five at the same time can be perilous. To ensure
ArviZ runs seamlessly on widely used Bayesian learning libraries, we 
need to test against all of them, which means we need to install all of them.&lt;/p&gt;
&lt;p&gt;In the event of issues, debugging locally is painful enough, but when
an error appears in the CI process, the developer has little access
to see what went wrong. Debugging amounts to lots of print statements, git commits
and 15 minutes of waiting to see what happens. It's especially maddening
when local testing passes but only the CI virtual machine is failing.&lt;/p&gt;
&lt;p&gt;This is the situation we were facing with plain TravisCI. Code that worked
great locally, suddenly was failing when contributors made pull requests. This in
no way is TravisCI's fault; TravisCI is a great tool that we're still using,
the fault was residing somewhere between the operating system, the five 
C level libraries, Python, and ArviZ.&lt;/p&gt;
&lt;p&gt;After a couple months, we switched to Docker-based testing on 
TravisCI for one simple reason, &lt;strong&gt;the developers' coding environment would
be an exact replica of the CI environment.&lt;/strong&gt; This meant that any CI
issue was now locally reproducible and locally solvable.&lt;/p&gt;
&lt;h2&gt;Docker CI Details&lt;/h2&gt;
&lt;p&gt;Alright, enough with the talk, on with the details, how is it done?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a Dockerfile for your CI environment&lt;/li&gt;
&lt;li&gt;Configure Continuous Integration service to build and test in your defined container&lt;/li&gt;
&lt;li&gt;Fix any integrations that may have broken&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let's talk through each step, one by one&lt;/p&gt;
&lt;h3&gt;Step 1: Dockerfile&lt;/h3&gt;
&lt;p&gt;The first step is deciding what you want your environment to contain. In
general you'll want your container to have all the tools needed to build
and test your code, and ideally to be as minimal as possible. We'll use the
&lt;a href="https://github.com/arviz-devs/arviz/blob/master/scripts/Dockerfile"&gt;ArviZ dockerfile&lt;/a&gt;
as an example.&lt;/p&gt;
&lt;p&gt;The first line is the base image.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;FROM conda/miniconda3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It's typically recommended to start with a minimal image, like
alpine. However, at ArviZ we found it much simpler to start with an environment
that already had some things set up, and just work from there. This means
the image isn't as minimal as it could be, but we're not shipping containers
"at scale" so this tradeoff was worth it.  &lt;/p&gt;
&lt;p&gt;Next, we setup arguments and environmental variables&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ARG SRC_DIR
ARG PYTHON_VERSION
ARG PYSTAN_VERSION
ARG PYRO_VERSION

ENV PYTHON_VERSION=&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;PYTHON_VERSION&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
ENV PYSTAN_VERSION=&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;PYSTAN_VERSION&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
ENV PYRO_VERSION=&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;PYRO_VERSION&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
ENV DOCKER_BUILD=true

# For Sphinx documentation builds
ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The choices are intended to allow some flexibility in what gets installed
in each image. For ArviZ we test against different versions of libraries
and we didn't want to create a dockerfile for each. By setting the 
ENV variables here through command line arguments we afford some flexibility&lt;/p&gt;
&lt;p&gt;After this, we actually start installing things&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;RUN&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;essential&lt;/span&gt; &lt;span class="n"&gt;pandoc&lt;/span&gt; \
    &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lists&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt;

&lt;span class="c1"&gt;# Copy requirements and environment installation scripts&lt;/span&gt;
&lt;span class="n"&gt;COPY&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SRC_DIR&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;  &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;arviz&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;COPY&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SRC_DIR&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;  &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;arviz&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;COPY&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SRC_DIR&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;arviz&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt;

&lt;span class="n"&gt;WORKDIR&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;arviz&lt;/span&gt;

&lt;span class="c1"&gt;# Create conda environment. Defaults to Python 3.6&lt;/span&gt;
&lt;span class="n"&gt;RUN&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;create_testenv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Installations happen at two levels, some are at the container level,
and the rest are in the Python environment. We choose to have a separate
&lt;code&gt;create_testenv.sh&lt;/code&gt; script because this allows users to run it outside
of Docker.&lt;/p&gt;
&lt;p&gt;The next section of the file copies the ArviZ code base and
removes any cached files.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;COPY $SRC_DIR /opt/arviz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The last section clears any remaining cache files and sets the default
command of the container to execute tests. There is something weird
with the &lt;code&gt;source /root/.bashrc&lt;/code&gt; which I'll talk more about in
the general tips section.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;RUN&lt;/span&gt; &lt;span class="nv"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt; &lt;span class="nv"&gt;arviz&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;tests&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;saved_models&lt;/span&gt;&lt;span class="cm"&gt;/*.pkl&lt;/span&gt;
&lt;span class="cm"&gt;RUN find -type d -name __pycache__ -exec rm -rf {} +&lt;/span&gt;

&lt;span class="cm"&gt;CMD [&amp;quot;/bin/bash&amp;quot;, &amp;quot;-c&amp;quot;, &amp;quot;source /root/.bashrc &amp;amp;&amp;amp; pytest -vv arviz/tests --cov=arviz/ &amp;amp;&amp;amp; echo Finished Testing&amp;quot;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step 2: Configure your CI service&lt;/h3&gt;
&lt;p&gt;The next step is configuring TravisCI. Luckily, this is not too hard.
Adding the lines below will install the latest version of &lt;em&gt;docker-ce&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;addons&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ce&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After that you'll be able to build an image and run tests, capture code coverage,
generate documentation, or whatever else you'd need.&lt;/p&gt;
&lt;h3&gt;Step 3: Fix any integrations that may have broken&lt;/h3&gt;
&lt;p&gt;One downside of testing in a container is that isolation is great,
until it isn't. We found that some of the tooling that integrates with
TravisCI no longer worked , such as travis-sphinx, and coveralls, &lt;/p&gt;
&lt;p&gt;The trick here was to generate the documentation and coverage files in
the container, but ensure they were available in the TravisCI environment
by using a bind mount. An example can be found in 
&lt;a href="https://github.com/arviz-devs/arviz/blob/6d1b65e0c99bb716ee0ebcbdac8cdc9e1380a472/.travis.yml#L68-L69"&gt;the .travis.yml file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When the files are present in TravisCI file system, the integrated tools
can deploy the docs and coverage just as they had done it the past.&lt;/p&gt;
&lt;h2&gt;Miscellaneous tips&lt;/h2&gt;
&lt;p&gt;There were some gotchas that required some experimentation which I'll document here.&lt;/p&gt;
&lt;h3&gt;Formatting in TravisCI yml files&lt;/h3&gt;
&lt;p&gt;TravisCI is picky about semicolons, spaces, and newlines in its &lt;code&gt;.travis.yml&lt;/code&gt; file.
If you run into odd errors, be sure to troubleshoot these first.&lt;/p&gt;
&lt;h3&gt;Bash profiles in non-interactive shells&lt;/h3&gt;
&lt;p&gt;Not all bash shells are interactive, and 
&lt;a href="https://www.gnu.org/software/bash/manual/html_node/Bash-Startup-Files.html"&gt;when they're not, they don't invoke&lt;/a&gt;
a &lt;code&gt;.bashrc&lt;/code&gt; file. This is why you see &lt;code&gt;source /root/.bashrc&lt;/code&gt; frequently 
in our &lt;code&gt;.travis.yml&lt;/code&gt; files. This command loads the `.bashrc. file  before
executing the next command.
While this workaround isn't the most elegant, it did work for our purposes. 
However, if you know of a better solution,
please let us know through an issue or a pull request! We would greatly appreciate it.&lt;/p&gt;</content><category term="Data Science"></category><category term="MLOps"></category></entry><entry><title>Faster blogging with Tmux</title><link href="/TmuxBlogging.html" rel="alternate"></link><published>2018-05-18T00:00:00+00:00</published><updated>2018-05-18T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2018-05-18:/TmuxBlogging.html</id><summary type="html">&lt;p&gt;Writing blog articles is great, but an aspect of it that is not is getting
running all the scripts to get everything setup. To start a blogging
session in no particular order I need to  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Traverse to my repository  &lt;/li&gt;
&lt;li&gt;Start an http server  &lt;/li&gt;
&lt;li&gt;Traverse directories again  &lt;/li&gt;
&lt;li&gt;Start pelican  &lt;/li&gt;
&lt;li&gt;Traverse directories …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Writing blog articles is great, but an aspect of it that is not is getting
running all the scripts to get everything setup. To start a blogging
session in no particular order I need to  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Traverse to my repository  &lt;/li&gt;
&lt;li&gt;Start an http server  &lt;/li&gt;
&lt;li&gt;Traverse directories again  &lt;/li&gt;
&lt;li&gt;Start pelican  &lt;/li&gt;
&lt;li&gt;Traverse directories more  &lt;/li&gt;
&lt;li&gt;Start vim  &lt;/li&gt;
&lt;li&gt;Start writing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tmux, a terminal multiplexer, makes it easier to switch between the terminals
running these processes, but starting them manually is a pain&lt;/p&gt;
&lt;p&gt;Luckily Tmux supports scripting which makes solving this problem really easy.&lt;/p&gt;
&lt;h1&gt;Tmux script&lt;/h1&gt;
&lt;p&gt;The shell script below runs all the commands needed to start a blogging
environment on my computers.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# !/bin/sh&lt;/span&gt;
&lt;span class="c1"&gt;# Small script that sets up blogging environment with one command&lt;/span&gt;

&lt;span class="c1"&gt;# Kill open session&lt;/span&gt;
tmux kill-session -t blog &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;

&lt;span class="c1"&gt;# Create new session&lt;/span&gt;
tmux new-session -d -s blog 

&lt;span class="c1"&gt;# C-m is carriage return in tmux&lt;/span&gt;
tmux send-keys &lt;span class="s1"&gt;&amp;#39;source activate blog &amp;amp;&amp;amp; pelican -r -s pelicanconf.py&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C-m&amp;#39;&lt;/span&gt; 

&lt;span class="c1"&gt;# Start http server&lt;/span&gt;
tmux &lt;span class="k"&gt;select&lt;/span&gt;-window -t blog:0
tmux split-window -v 
tmux send-keys &lt;span class="s1"&gt;&amp;#39;cd .. &amp;amp;&amp;amp; python -m http.server&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C-m&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# Ready to blog&lt;/span&gt;
tmux new-window -n blog_article -c &lt;span class="nv"&gt;$PWD&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/content&amp;quot;&lt;/span&gt;
tmux att -t blog
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Breaking this apart, the first thing to do is ensure that no other tmux session
is already running all the processes I need. This is done by checking
if a session named &lt;code&gt;blog&lt;/code&gt; is running and if so kills it. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Kill open session&lt;/span&gt;
tmux kill-session -t blog &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The next step is creating a ession to group all the windows and panes
that will be running the processes. The first done is starting a session
named blog. Next the pelican process is started. &lt;code&gt;send-keys&lt;/code&gt; was used
instead of running the command directly because in tmux if process stops
the pane would close, not a behavior that was desired. &lt;code&gt;C-m&lt;/code&gt; is a carriage
return and instructs tmux to run the command after typing it in, the same
as pressing enter does when manually typing the command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Create new session&lt;/span&gt;
tmux new-session -d -s blog 

&lt;span class="c1"&gt;# C-m is carriage return in tmux&lt;/span&gt;
tmux send-keys &lt;span class="s1"&gt;&amp;#39;source activate blog &amp;amp;&amp;amp; pelican -r -s pelicanconf.py&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C-m&amp;#39;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With the pelican process ready to generate the site, the next step is to
start a local server to view the blog in a browser&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Start http server&lt;/span&gt;
tmux &lt;span class="k"&gt;select&lt;/span&gt;-window -t blog:0
tmux split-window -v 
tmux send-keys &lt;span class="s1"&gt;&amp;#39;cd .. &amp;amp;&amp;amp; python -m http.server&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C-m&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lastly we start a new window in the directory where the markdown files 
where for this blog are stored. The final command is attaching the tmux
session to the running terminal to start writing.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Ready to blog&lt;/span&gt;
tmux new-window -n blog_article -c &lt;span class="nv"&gt;$PWD&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/content&amp;quot;&lt;/span&gt;
tmux att -t blog
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And with that were done!&lt;/p&gt;
&lt;h1&gt;Why go through the trouble&lt;/h1&gt;
&lt;p&gt;If the task I want to do is write a blog, every step between is a distraction
and a time waste. This script allows me to bypass all the manual steps
and jump straight into the value add work, writing content to share with you! &lt;/p&gt;</content><category term="Programming"></category><category term="Programming"></category><category term="MLOps"></category></entry><entry><title>Coding Confusion</title><link href="/CodingConfusion.html" rel="alternate"></link><published>2018-03-12T00:00:00+00:00</published><updated>2018-03-12T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2018-03-12:/CodingConfusion.html</id><summary type="html">&lt;p&gt;Recently I've been teaching more coding than ever, both to coworkers and
to students in my bootcamp. While they're all catching on and getting
results, its made me step back and realize, modern day programming is not
straightforward and with all the various parts, often is just plain confusing.&lt;/p&gt;
&lt;h1&gt;Your …&lt;/h1&gt;</summary><content type="html">&lt;p&gt;Recently I've been teaching more coding than ever, both to coworkers and
to students in my bootcamp. While they're all catching on and getting
results, its made me step back and realize, modern day programming is not
straightforward and with all the various parts, often is just plain confusing.&lt;/p&gt;
&lt;h1&gt;Your first program&lt;/h1&gt;
&lt;p&gt;Python is a popular programming language so it feels simple enough to tell a 
new programmer, "Hey open up a text editor and write the following commands"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At this point the you feel accomplished, the student feels accomplished, 
but then it quickly wears off as both of you realize this program doesn't
do anything useful. So you start trying to explain the next steps, but where
do you start?&lt;/p&gt;
&lt;h1&gt;Your first productionized program&lt;/h1&gt;
&lt;p&gt;There's data types in Python, such as lists, dictionaries, etc. There's also
the concept of iteration and control loops. But DRY is a thing so you 
quickly have to explain functions, but then you get into scope, and with
Python there's whitespace formatting to cover as well. &lt;/p&gt;
&lt;p&gt;Somewhere in there you fit in a lesson about shell commands, and depending
on whether they're in Windows or a POSIX client you wave your hands about
OS file systems.&lt;/p&gt;
&lt;p&gt;All the code shouldn't be in one file though or it's confusing, so then you explain
Python import machinery, but modules have their own nuances. Somewhere
in there you ramble on about functional design vs OOP.&lt;/p&gt;
&lt;p&gt;Well now the student has something more complex working and they're thrilled
but they want to deploy it. So now you need to teach them about git, but
its also important that they know about isolated environments through
virtualenv, or conda. A conversation ensues about dependencies and why
pinning versions for imported packages might be necessary.&lt;/p&gt;
&lt;p&gt;After all this they finally get their code packaged up and put into a repo.
Their code works and is available  but man it's ugly so you start explaining
the importance of code quality, and how PEP8 is a thing, and why spaces after
single line comments and camel casing are oh so important. A linting
package is installed a bunch of messages appear on the console
after you show they how to run it.&lt;/p&gt;
&lt;p&gt;They didn't know about unit testing though so you go through a lecture on
Test Driven Development. Their monolithic logic needs to be refactored.&lt;/p&gt;
&lt;p&gt;And now their code needs to be deployed, so you ask them hard questions
of how it will be used. If it's going to be a local package did they make
sure it worked across all operating systems and python versions?&lt;/p&gt;
&lt;p&gt;They instead want a webapp, which eliminates most of the issues above, sweet!
You ask them which web framework they want to use but now they need to learn
about WSGIs and API design. An explanation about networking and HTTP response
codes fits in there as well.&lt;/p&gt;
&lt;p&gt;Don't forget the front end though, where they now jump into HTML/CSS/Javascript.
You explain that while most of the concepts above are still relevant, they're
ever so different in another language. And let's hope they don't need a backend
or you'll spend the rest of the day explaining what an ORM is but only
after you teach them bare SQL so they know what's going on under the hood.&lt;/p&gt;
&lt;p&gt;Then you need to talk about Continuous Integration and explain various
deployment strategies from Virtual Machines to Docker Containers to self hosting
versus cloud hosting.&lt;/p&gt;
&lt;p&gt;And if they're doing machine learning be sure to cover at least a semester's
worth of statistics.&lt;/p&gt;
&lt;h1&gt;The Point&lt;/h1&gt;
&lt;p&gt;Going from starter code to production is a lot of steps and for people
that are new to programming it can be very frustrating because the code seemed
to work 10 steps ago. If you're a seasoned
programmer take a second to step back and realize how many moving parts
there are to deploying a "maintainable production ready" app/library,
and how to someone new it can be very difficult to
see the forest for the trees! There's a lot of steps and concepts between Hello World
and a robust library or application. When teaching someone new just take a breath
and remember what it took you to gain that understanding as you guide your
junior programmer. They will appreciate the help.&lt;/p&gt;</content><category term="Programming"></category><category term="Visualization"></category></entry><entry><title>A review of Udacity's Machine Learning Nanodegree</title><link href="/UdacityMLND.html" rel="alternate"></link><published>2018-01-04T00:00:00+00:00</published><updated>2018-01-04T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2018-01-04:/UdacityMLND.html</id><summary type="html">&lt;p&gt;I recently finished the Udacity Machine Learning Nanodegree and wanted to share
the following thoughts on my experience.&lt;/p&gt;
&lt;p&gt;If you haven't read my &lt;a href="/DSGuide.html"&gt;Review of Data Science Programs&lt;/a&gt;
I would do so first, to get a general explanation of the other types
of machine learning curriculum.&lt;/p&gt;
&lt;h1&gt;The rundown&lt;/h1&gt;
&lt;p&gt;The Machine …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently finished the Udacity Machine Learning Nanodegree and wanted to share
the following thoughts on my experience.&lt;/p&gt;
&lt;p&gt;If you haven't read my &lt;a href="/DSGuide.html"&gt;Review of Data Science Programs&lt;/a&gt;
I would do so first, to get a general explanation of the other types
of machine learning curriculum.&lt;/p&gt;
&lt;h1&gt;The rundown&lt;/h1&gt;
&lt;p&gt;The Machine Learning Nanodegree is formatted in the previous style of Udacity
nanodegrees where you're charged 200 dollars a month until all seven projects
are completed. The projects themselves range in complexity, starting from
a basic linear regression, to clustering, to more challenging ones
such as a reinforcement learning implementation, and a CNN implementation.  &lt;/p&gt;
&lt;p&gt;The final portion is a capstone project where you are allowed to perform
a machine learning project on any dataset of your choosing.&lt;/p&gt;
&lt;p&gt;Overall I found the Machine Learning Nanodegree to be pretty comprehensive.
Nearly all machine learning topics were covered. Expect this Nanodegree
to take quite a bit of time, it's challenging from both a code perspective
and from a mathematical understanding perspective. The knocks I have 
against the program are the level of hand holding, sometimes a bit too much
code is implemented for you, and if you're lazy you can get away with just
filling in the blanks without understanding the whole picture. However
if you're diligent and spend time understanding all the code, even the 
portions implemented for you, you'll come out with a comprehensive understanding
of how to implement Machine Learning projects.&lt;/p&gt;
&lt;p&gt;If you're lightly interested in Machine Learning I would recommend Andrew Ng's
Coursera course over this one. But if you'd like to dive a bit deeper
and have money to spare you can't go wrong with this one as well.&lt;/p&gt;</content><category term="Programming"></category><category term="Programming"></category><category term="Education"></category></entry><entry><title>Maintainable Machine Learning Code</title><link href="/ReuseableML.html" rel="alternate"></link><published>2017-11-26T00:00:00+00:00</published><updated>2017-11-26T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2017-11-26:/ReuseableML.html</id><summary type="html">&lt;p&gt;Creating a machine learning pipeline requires almost no thought these days but 
maintaining a reusable and understandable codebase the whole way
through is much more challenging. However there are some steps and 
ideas that can be borrowed from traditional programming that are
still relevant.&lt;/p&gt;
&lt;h2&gt;Big Ball of Mud - Machine Learning …&lt;/h2&gt;</summary><content type="html">&lt;p&gt;Creating a machine learning pipeline requires almost no thought these days but 
maintaining a reusable and understandable codebase the whole way
through is much more challenging. However there are some steps and 
ideas that can be borrowed from traditional programming that are
still relevant.&lt;/p&gt;
&lt;h2&gt;Big Ball of Mud - Machine Learning Edition&lt;/h2&gt;
&lt;p&gt;Let's say you're starting out with Machine Learning and 
&lt;em&gt;you need an immediate fix for a small problem, or a quick prototype or proof of concept&lt;/em&gt;.
Easy, below is a sample program to make predictions on the Iris dataset&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.ensemble&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RandomForestClassifier&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.preprocessing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LabelEncoder&lt;/span&gt;
&lt;span class="n"&gt;iris_csv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://raw.githubusercontent.com/&amp;quot;&lt;/span&gt;
             &lt;span class="s2"&gt;&amp;quot;uiuc-cse/data-fa14/gh-pages/data/iris.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iris_csv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LabelEncoder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit_transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;species&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;species&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;clf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RandomForestClassifier&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;clf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Even to non programmers the above lines of code are pretty easy to read.
It's simple enough to just put that into a python script in some
directory with the data files next to it and start churning out predictions.&lt;/p&gt;
&lt;p&gt;Later on you realize there's some steps you can do to make your model better.
It starts off innocently enough, perhaps just one line to normalize
the features, maybe a loop to perform cross validation
but within a couple of hours you'll end up with one large python
script that has true false statements all over the place, code chunks
that are commented out, and incoherent comments all over the place. Suddenly
the &lt;em&gt;piecemeal growth&lt;/em&gt; of our project dawns on you.&lt;/p&gt;
&lt;p&gt;Hopefully you're using version control but even then all your code commits will be
on the master branch with commit messages like "model 1" or "added pickling column".
You'll find some features are engineered off other features, or 
portions of your code relied on a datatype coercion you made somewhere between
the third and sixth commit. As your code progresses
&lt;em&gt;Different artifacts change at different rates&lt;/em&gt; and you're trying
to remember which processing steps were required to run one of the predictions
you had that other day.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Your code is now a &lt;a href="http://www.laputan.org/mud/"&gt;Big Ball of Mud&lt;/a&gt;.&lt;/em&gt; Big Ball of
Mud is an excellent paper written in 1999 about what happens when code
is haphazardly written. The paper is still relevant today, with all the
text in italics copied and pasted straight from the paper. At
the core the paper is warning us that if architecture is not persistently considered
the final code base will become unmaintainable that it will eventually need to be 
totally torn down.
Unfortunately this is how I've seen so many machine learning implementations turn out.
The issue is present even at large companies like &lt;a href="" title="https://eng.uber.com/michelangelo/"&gt;Uber&lt;/a&gt;
who have built dedicated platforms for creating maintainable machine learning
pipelines.&lt;/p&gt;
&lt;p&gt;Even if you're just writing code for yourself there's still benefits intentionally
writing your code in a reusable way. You'll be able to iterate faster,
structure your experiments, and be able to revisit your code with minimal effort
later on. &lt;/p&gt;
&lt;h1&gt;General approaches&lt;/h1&gt;
&lt;p&gt;With some experimentation I've been able to find an approach that works for me.&lt;/p&gt;
&lt;h2&gt;Start with a package&lt;/h2&gt;
&lt;p&gt;Whether you're using R, Python, or any other language really, study up
on what is typically done to package the code. &lt;/p&gt;
&lt;p&gt;With Python I immediately do four things at a minimum  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a requirements.txt or environment.yml file  &lt;/li&gt;
&lt;li&gt;Create a source code directory  &lt;/li&gt;
&lt;li&gt;Write a README.md  &lt;/li&gt;
&lt;li&gt;Initialize a git repo and commit everything  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are the minimum steps for reproducibility. Imagine how hard it would be
if someone handed you a flash drive full of Python files. How do you know
what is required to run it, or what packages are needed? Rather
than worry if they were using Python 2 or 3, or pandas .19, etc 
With these four basic steps you're guaranteeing that the environment
is reproducible.&lt;/p&gt;
&lt;p&gt;A great tool that helps with this is CookieCutter templates,
specifically this &lt;a href="https://github.com/drivendata/cookiecutter-data-science"&gt;Data Science Template&lt;/a&gt;
It's got even more than detailed here but really will make setting up a reusable
package easy.&lt;/p&gt;
&lt;h2&gt;Write a library for reusable components of your code&lt;/h2&gt;
&lt;p&gt;Don't put everything in your main.py file. For code that loads datasets,
or writes predictions to a file, write a package that lets you abstract
that away from your machine learning code. Although it takes more 
effort up front, later on it means your actual prediction script
will be much easier to read.&lt;/p&gt;
&lt;p&gt;In the example above we can write a function that looks like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;load_iris&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Loads iris dataset from github and returns (df,y_raw)&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;iris_csv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://raw.githubusercontent.com/&amp;quot;&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;uiuc-cse/data-fa14/gh-pages/data/iris.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iris_csv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;y_raw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;species&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;species&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_raw&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Doing this has multiple benefits, if written in the package you can import
this into any script without any duplication. It also clearly demarcates
that this set of code has no dependencies on other lines.&lt;/p&gt;
&lt;h2&gt;Use a testing package&lt;/h2&gt;
&lt;p&gt;Unittests are still relevant with machine learning code. You can use
tests for your own code. There are many examples of 
&lt;a href="https://www.google.com/search?q=test+driven+development"&gt;test driven development&lt;/a&gt;.
However I also use tests to test my own understanding of how machine
learning libraries work. By writing the following tests I can double-check
my understanding of word lemmatizers and CountVectorizer in scikit-learn.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_lemmatization&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Test that Lemmatizer works&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;wnl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;WordNetLemmatizer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;wnl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lemmatize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dogs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;dog&amp;#39;&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_lemmatization_with_countvectorizer&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Test Lemmatization with Stop Words removal&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;strings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;I like Dogs and&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;I like Churches and&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CountVectorizer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tokenizer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;lemmatizer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stop_words&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;english&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;church&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;dog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;like&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_feature_names&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It's not about my doubt that the code is implemented poorly, but moreso
to double check and reinforce my own understanding. By writing series
of these tests I find that I both understand what other libraries are doing and
that I double check my understanding fundamentals of the theory.&lt;/p&gt;
&lt;h1&gt;Scikit-learn specific&lt;/h1&gt;
&lt;p&gt;If you use scikit there are some additional tools that are helpful.
scikit-learn itself is written in a way that makes machine learning composable.
It's so good that other non scikit-learn libraries
tend to build similar APIs to maintain compatibility, for example XGBoost
implements a scikit-learn abstraction layer.&lt;/p&gt;
&lt;h2&gt;Use pipelines&lt;/h2&gt;
&lt;p&gt;scikit-learn makes it very easy to tie data processing steps together, without
storing intermediate results. It also makes it easy to turn off
or turn on portions of your pipeline without having to comment entire
blocks of code. And lastly it makes it very easy to use parameter grid searches
and cross validation in one or two lines.&lt;/p&gt;
&lt;h2&gt;Write your own predictors and transformers&lt;/h2&gt;
&lt;p&gt;Most of the time however data will require some data munging before
scikit-learns transformers and predictors can use it. For these activities
scikit-learn provides all the scaffolding you need 
&lt;a href="http://scikit-learn.org/stable/modules/classes.html#module-sklearn.base"&gt;in its base module&lt;/a&gt;
By utilizing these it keeps you within the pipeline framework which
again makes it easy to use all the built-in tools for experimentation.&lt;/p&gt;
&lt;p&gt;For example here is an implementation of a transformer I used in a Natural 
Language Processing Problem that found word count and string length for a given string.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TextTransformer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BaseEstimator&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TransformerMixin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Takes column of text and returns back array of features. Features list is specified by features&lt;/span&gt;
&lt;span class="sd"&gt;        Parameters&lt;/span&gt;
&lt;span class="sd"&gt;        ----------&lt;/span&gt;
&lt;span class="sd"&gt;        features : iter&lt;/span&gt;
&lt;span class="sd"&gt;            Iterable of features strings that correspond to class&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;features&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Accepts Pandas Series and returns back a dataframe where each column is a feature&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Features must be a list of features that will be used in this model&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;feature&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;transformer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;feature&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;transformer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;feature&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;

    &lt;span class="nd"&gt;@staticmethod&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;word_count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Count the number of words in each string&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

    &lt;span class="nd"&gt;@staticmethod&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sentence_length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Get the length of the string for each author&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;While seemingly verbose, if using packages in my machine learning code
this entire feature processing portion of logic looked like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FeatureUnion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;basic_preprocessing&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TextTransformer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;word_count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sentence_length&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tfidf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TfidfVectorizer&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It made it dead simple for me to add or remove features with just one
line of code, making my experimentation and feature selection process
that much quicker.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;It's very much worth the effort to spend the extra effort to make your 
machine learning code be more like a package and less like a script.
You'll save anyone using your code time figuring out how to reproduce your 
results, but you'll also save yourself a bunch of time also trying to 
reproduce your results! The extra effort goes a long way in protecting
your sanity and also ensuring you're able to build more than just a prototype
prediction engine.&lt;/p&gt;</content><category term="Data Science"></category><category term="MLOps"></category></entry><entry><title>A recommendation on Berkeley's Deep Reinforcement Learning Bootcamp</title><link href="/DeepRLBootcamp.html" rel="alternate"></link><published>2017-08-27T00:00:00+00:00</published><updated>2017-08-27T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2017-08-27:/DeepRLBootcamp.html</id><summary type="html">&lt;p&gt;I just spent the weekend at the Berkeley Reinforcement Learning Bootcamp. 
Overall I found it to be an intense but rewarding experience but also
expensive if you're paying out of pocket.
Read on for more of my thoughts and my recommendations if you should
attend.&lt;/p&gt;
&lt;h1&gt;Recommendations&lt;/h1&gt;
&lt;p&gt;I'm guessing most people …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I just spent the weekend at the Berkeley Reinforcement Learning Bootcamp. 
Overall I found it to be an intense but rewarding experience but also
expensive if you're paying out of pocket.
Read on for more of my thoughts and my recommendations if you should
attend.&lt;/p&gt;
&lt;h1&gt;Recommendations&lt;/h1&gt;
&lt;p&gt;I'm guessing most people will care about this so I'll just put it at the top.
My recommendation is basically split into three categories.&lt;/p&gt;
&lt;h2&gt;I'm at least lightly interested in AI/RL and my employer will pay&lt;/h2&gt;
&lt;p&gt;Then you should definitely come. It's definitely worth the weekend because
no matter what you'll be walking out of here with more knowledge than when
you started.  The information has been condensed by the experts to maximize
your learning in a short time.&lt;/p&gt;
&lt;h2&gt;I'm interested but I'm paying myself&lt;/h2&gt;
&lt;p&gt;Sort of a toss up here. The bootcamp is pretty expensive but it still might
be worthwhile. Read on for more details to see if it's worth it for you.&lt;/p&gt;
&lt;h1&gt;An approximate schedule and what was covered&lt;/h1&gt;
&lt;p&gt;The bootcamp was split over two days, with approximately 12 hours of activity
each day. In a day specifically there about&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2 hours of social/networking time, which included things like lunch and coffee breaks&lt;/li&gt;
&lt;li&gt;3 hours of working on provided labs with PhD students available to help&lt;/li&gt;
&lt;li&gt;7 hours of lectures with topics ranging from basics to cutting edge research&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Lecture topics&lt;/h2&gt;
&lt;p&gt;Specifically the lectures covered topics starting from V and Q learning,
through DQN, and then branched to focus on specific RL focus areas such
as various types of Model Based Learning, Model Free Learning, Evolutionary
methods, as well as lectures focused on general tips for learning how to learn
Reinforcement Learning (say that three times fast). Overall the lectures
were wellrstructured, given by a variety of speakers, and very informative.
However, the target audience skillset varied greatly, the difficultly ranged  from 
basic to extremely intense (literally cutting edge) pretty fast.&lt;/p&gt;
&lt;h2&gt;Labs&lt;/h2&gt;
&lt;p&gt;The labs were pretty basic, just implementations of Q and V learning, and
the "Fill in the two magic lines" type of labs. The neat part where that
there was plenty of expert TAs around to help with questions. Unfortunately
the labs were not released ahead of time, so if you came with little knowledge
of the basics you would spend most of your time stuck in the shallow
end of the pool, and wouldn't really be able to really utilize the specialized help.&lt;/p&gt;
&lt;h2&gt;Networking&lt;/h2&gt;
&lt;p&gt;Everyone here was pretty enthusiastic to be here so overall a great crowd. The
people certainly made the bootcamp more fun.&lt;/p&gt;
&lt;h1&gt;So If I'm paying myself is it worth it?&lt;/h1&gt;
&lt;p&gt;Well you'll definitely learn something, but "Is it worth it?" is a different question.
If you're just starting out in RL then you really won't be able to grok
most of the knowledge unfortunately. You'd be better off reading books and following
tutorials online.  &lt;/p&gt;
&lt;p&gt;However, if you have some experience and practice using RL you're in the 
sweet spot, as the advanced topics will push your knowledge, and there are lots
of friendly experts around to answer detailed questions.  &lt;/p&gt;
&lt;h1&gt;A Final Note&lt;/h1&gt;
&lt;p&gt;With AI and Deep RL being a hot topic there's the risk that some of these conferences
are just cashing in on the hype without providing much content.
That is &lt;strong&gt;not&lt;/strong&gt; the case with this bootcamp, lecturers and TAs were very knowledgeable,
just be sure you're prepared to understand what they're teaching you!&lt;/p&gt;</content><category term="Data Science"></category><category term="Education"></category></entry><entry><title>A review of the Los Angeles Metro</title><link href="/LAMetro.html" rel="alternate"></link><published>2017-03-08T00:00:00+00:00</published><updated>2017-03-08T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2017-03-08:/LAMetro.html</id><summary type="html">&lt;p&gt;I recently started taking the Los Angeles Metro to work and wanted to share my experience
especially since it  has overall been  better than I originally
anticipated.  &lt;/p&gt;
&lt;h2&gt;The misconception&lt;/h2&gt;
&lt;p&gt;People tend to think that Los Angeles does not have public transportation.
At the very least I used to think Los …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently started taking the Los Angeles Metro to work and wanted to share my experience
especially since it  has overall been  better than I originally
anticipated.  &lt;/p&gt;
&lt;h2&gt;The misconception&lt;/h2&gt;
&lt;p&gt;People tend to think that Los Angeles does not have public transportation.
At the very least I used to think Los Angeles did not have a good public
transportation system my entire childhood and early adulthood
This simply is not true.I now use the Metro everyday to commute and I wish I had changed
my mentality earlier&lt;/p&gt;
&lt;h2&gt;The Metro is very usable&lt;/h2&gt;
&lt;p&gt;Admittedly Los Angeles is a very expansive city, and with that comes
longer times either by car or by public transportation. But the Metro does a good
job of covering all areas of the city. Instead of sitting in traffic now I'm
able to read, or write this blog post for example. &lt;/p&gt;
&lt;h2&gt;The good&lt;/h2&gt;
&lt;p&gt;The things I like about the LA Metro is that  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's cheap, only 1.75 per ride which for me ends up being much cheaper than gas
and related car expenses&lt;/li&gt;
&lt;li&gt;It's pretty reliable&lt;/li&gt;
&lt;li&gt;Covers the vast majority of LA&lt;/li&gt;
&lt;li&gt;Means I don't have to find and pay for parking when I go to Downtown LA or Santa Monica&lt;/li&gt;
&lt;li&gt;I don't have to worry about the risks of driving, such as nodding off, DUIs, or other drivers  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In general, I can take the time to relax rather than fight my way through traffic
and at the end of my journey I don't have to worry about where to leave my car,
something that can be quite expensive. Overall I can get from Long Beach
to Downtown in LA in the same time, with less stress, and at a tenth of the cost.&lt;/p&gt;
&lt;h2&gt;The bad&lt;/h2&gt;
&lt;p&gt;The things I dislike about the LA metro are &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It sometimes has very long delays&lt;/li&gt;
&lt;li&gt;It directly go to certain places, meaning you have to zig zag across LA sometimes`&lt;/li&gt;
&lt;li&gt;At night, I still feel unsafe using it in certain areas&lt;/li&gt;
&lt;li&gt;Some of the people are unscrupulous unfortunately  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On the flip side the Metro is not optimized for your specific trip. Getting
from Long Beach to Redondo Beach isn't as straightforward as it would be
if you were to hop in your car. And I don't always feel safe hanging around
the platforms late at night, even as a male. To the Metro's credit
however they are adding new lines, such as the Expo line, and armed guards
frequent platforms and the trains every so often.&lt;/p&gt;
&lt;h2&gt;The way I use the Metro&lt;/h2&gt;
&lt;p&gt;For commutes I pretty much use the Metro as expected, I take both from and to
trip on the Metro with one transfer. It works great and saves me a lot of stress
on workdays. On weekends if I'm going to downtown LA I take the metro
to the closest stop to my destination and take a Lyft the remaining distance.
Using it this way saves me a lot of money over using a rideshare the entire distance.
Some of my coworkers drive to a Metro station, park their car there, and use
the train for the remainder of their commute.&lt;/p&gt;
&lt;h2&gt;Verdict: Very practical and very usable&lt;/h2&gt;
&lt;p&gt;If you've never given the Metro a try I would certainly say do so. Instead of
defaulting to car for all your trips, use Google Maps and see if public
transportation can get you where you need. You'll likely be pleasantly surprised.&lt;/p&gt;</content><category term="Life"></category><category term="Life"></category></entry><entry><title>Programming as a Non Programmer - Part 3</title><link href="/NonProgrammerP3.html" rel="alternate"></link><published>2017-01-23T00:00:00+00:00</published><updated>2017-01-23T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2017-01-23:/NonProgrammerP3.html</id><summary type="html">&lt;p&gt;This is Part 3 in a series about how learning how to program could affect
your career and some of the experiences I've had with programming in mine&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/NonProgrammerP1.html"&gt;Intent of series and introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/NonProgrammerPart2.html"&gt;What Programming as a Non Programmer means&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Why not to be a programmer&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Why you shouldn't learn …&lt;/h1&gt;</summary><content type="html">&lt;p&gt;This is Part 3 in a series about how learning how to program could affect
your career and some of the experiences I've had with programming in mine&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/NonProgrammerP1.html"&gt;Intent of series and introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/NonProgrammerPart2.html"&gt;What Programming as a Non Programmer means&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Why not to be a programmer&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Why you shouldn't learn to program&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.google.com/search?q=you+should+learn+to+program"&gt;A quick Google Search&lt;/a&gt;
shows hundreds of sites that proclaim you should learn how to program.
I've personally doubled my salary learning how to program and it was a strong
factor in SpaceX deciding to hire me. However this does not mean you should 
learn to program and there are many cases in which I have recommended that people
don't learn programming.  &lt;/p&gt;
&lt;p&gt;Some reasons that I read, or I hear, usually follows the lines of  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Programming is a hot skill&lt;/li&gt;
&lt;li&gt;Programmers make more money&lt;/li&gt;
&lt;li&gt;My boss will give me a raise if I learn how to program&lt;/li&gt;
&lt;li&gt;Computers are everywhere in everyday life, you should learn how to program them &lt;/li&gt;
&lt;li&gt;You'll get to work wherever you want, whenever you want &lt;/li&gt;
&lt;li&gt;Founder XYZ of startup ABC made a billion dollars programming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.forbes.com/sites/laurencebradford/2016/06/20/why-every-millennial-should-learn-some-code/2/#"&gt;"If you're an English Major ... or didn't go to college .. or were raised by Wolves"&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These pitches are echoed all over the place, even from Forbes magazine.
A lot of times it's accompanied by
a pitch to then pay money for a bootcamp class, or book, or subscription
to an ad sponsored email list. In these cases there's a clear reason why
you're told to program, so someone else can earn money.&lt;/p&gt;
&lt;p&gt;This is not to say there aren't altruistic people teaching you how to program.
There are plenty of well-meaning people that also give the same advice,
but again I strongly believe this advice does not universally apply.&lt;/p&gt;
&lt;h1&gt;Debunking the reasons&lt;/h1&gt;
&lt;h2&gt;Programming is not a get rich quick scheme&lt;/h2&gt;
&lt;p&gt;If you're learning programming with the sole intent of making money easily,
or getting a "work from anywhere" lifestyle, consider the economics 
of this. If programming was easy, if anyone learn it in 6 months, if you can
work remotely, why would companies pay &lt;strong&gt;you&lt;/strong&gt; a nice salary to do it? When I say
you, I mean you, versus a person in India, or Mexico, who can work for one 
tenth of the cost. Or you versus the high schooler down the street that
just graduated. Cal Newport writes an excellent blog series, one of the points
being that to be valuable, you must provide unique value to someone else.
What will make you a more valuable programmer versus anybody else?&lt;/p&gt;
&lt;h2&gt;The fact that computers are commonplace is not a compelling argument to program&lt;/h2&gt;
&lt;p&gt;It's true, computers are becoming and increasingly integral part of life,
but just because they're around isn't itself a compelling reason to
learn how to program. There are many objects that are common place,
such as cars and houses but rarely do you see the advice
"You live in a house, you should build your own", or "You use your car, you
should learn how to make your own transmission". &lt;/p&gt;
&lt;h2&gt;Learning how to program doesn't teach you everything about computers work&lt;/h2&gt;
&lt;p&gt;Conversely programming itself is an abstraction of physical transistors or byte code,
but usually when people talk about "learning programming" they're talking about
an arbitrary middle layer. Of course learning to program is a step
in learning how computers work, but it's like saying that if you learn
how to change your oil you understand how your car works.&lt;/p&gt;
&lt;h2&gt;"The skills you learned before are not as valuable as Programming"&lt;/h2&gt;
&lt;p&gt;I commonly read about how "English Majors" should learn programming.
This one bothers me the most because implies programming is a superior
skillset to whatever a person already knows. I feel like approach
is largely negative, and even if it were true, is not a good way to convince 
people to program. I feel that people should be interested in an activity
for its merits, rather than being scared into it by being told that 
their previous choices were largely mistakes.&lt;/p&gt;
&lt;h1&gt;Past the flashy titles&lt;/h1&gt;
&lt;p&gt;If you look past click bait titles there's some underlying truths to 
how people generate value from their skills.&lt;/p&gt;
&lt;h2&gt;Writing a program is easy, mastering programming is hard&lt;/h2&gt;
&lt;p&gt;I write English. There are other people that
also write English such as JK Rowling, Tom Clancy, and J.R.R. Tolkien.
Yet those people were paid millions of dollars for their words. I doubt
anyone will pay me for the words on this  blog. The difference is those people have mastered
the English language in their own unique way through years of hard work and practice.&lt;/p&gt;
&lt;p&gt;Learning to do program isn't free, even if Youtube videos or books cost $0 dollars
online you'll need to spend many hours of your life focusing on learning
programming (or any other skill really). &lt;/p&gt;
&lt;h2&gt;Programming skills by themselves are rarely valued&lt;/h2&gt;
&lt;p&gt;Pay attention to the skillsets of the people that earned value from
programming, usually people like Bill Gates or Mark Zuckerberg are examples.
Those people were good at programming, but they were also good at other things,
especially leadership and figuring out what people wanted. A good programmer
that can't communicate or work with others usually does not have a great life.
An unfortunate example of this is Phil Katz, who was an extraordinary programmer,
but had trouble working with others and arguably did not have an ideal life in
his later days. Strongly consider what skills you have that you can work on 
outside of programming constantly.&lt;/p&gt;
&lt;h1&gt;The Summary&lt;/h1&gt;
&lt;p&gt;There's a lot of good reasons to learn how to program, but the reasons
above in my opinion are not the right ones. If you're deciding to program
I would carefully evaluate if you're being swayed by arguments
such as the one above. If so think hard about whether learning programming
is right for you. In the next post I'll talk about reasons why learning
programming can be beneficial.&lt;/p&gt;</content><category term="Programming"></category><category term="Programming"></category></entry><entry><title>Programming as a Non Programmer - Part 2</title><link href="/NonProgrammerPart2.html" rel="alternate"></link><published>2017-01-16T00:00:00+00:00</published><updated>2017-01-16T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2017-01-16:/NonProgrammerPart2.html</id><summary type="html">&lt;p&gt;This is Part 2 in a series about how learning how to program could affect
your career and the experiences I've had with programming in mine.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/NonProgrammerP1.html"&gt;Intent of series and introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;What Programming as a Non Programmer means&lt;/li&gt;
&lt;li&gt;Why not to be a programmer&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;What Programming without being a Programmer …&lt;/h1&gt;</summary><content type="html">&lt;p&gt;This is Part 2 in a series about how learning how to program could affect
your career and the experiences I've had with programming in mine.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/NonProgrammerP1.html"&gt;Intent of series and introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;What Programming as a Non Programmer means&lt;/li&gt;
&lt;li&gt;Why not to be a programmer&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;What Programming without being a Programmer means&lt;/h1&gt;
&lt;p&gt;Programmer, or coder, is a pretty broad term these days but 
in this series we'll use the following split to differentiate 
programmers from non programmers&lt;/p&gt;
&lt;p&gt;I would describe the split as  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;People that get paid primarily for their skill to write code (Programmers)&lt;/li&gt;
&lt;li&gt;People that get paid primarily to do something that isn't write code (Non Programmers)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There are people at all companies at which I've been employed which fit into category one,
they are given software programs and the expectation of their role 
is to write code of some sort that solves a business problem. I consider
these people to be programmers.&lt;/p&gt;
&lt;p&gt;I fall into the second category, my position is more dependent on domain
expertise of supply chains and manufacturing processes. My coworkers
only know very rudimentary programming, Excel sheets and
basic SQL at most. The expectation of our job is make the manufacturing 
execution more efficient. I do write programs at work, but I'm a Non
Programmer&lt;/p&gt;
&lt;p&gt;This is what Programming without being a Programmer means. Essentially
Programming (as a technical activity) without being a Programmer (in job title).&lt;/p&gt;
&lt;h1&gt;Why split hairs?&lt;/h1&gt;
&lt;p&gt;While it seems like a subtle difference in theory, but in practice it leads
to major organizational differences. Group 1 is valued by the company by their
ability to produce robust technical solutions that solve major business
problems. Because they are valued for this the specific focus this group
the people in this group are the ones we hear about all the time,
the one that hires people that can implement FizzBuzz
blindfolded,  the ones that setup continous integration environments, or
are now using Docker containers to increase uptime. This organization focuses
on hiring people that have lots of experience in Computer Science, &lt;em&gt;Programmers&lt;/em&gt;
as defined above. If you're in this group learning to program
is very much tied to your ability to produce value, and your organization
will more than likely support increasing your programming ability through paid trainings,
finding you other programming colleagues, and investing in programming resources
for you, like really nice computers. Simply put if these programmers can't program they're 
probably going to get fired. Learning to program has a very obvious and 
clear correlation with your ability to produce value to society, and improve
your life condition.&lt;/p&gt;
&lt;p&gt;Group 2 is all the other organizations, the accounting department, building maintenance 
department, purchasing department, or sales department.&lt;/p&gt;
&lt;p&gt;These people are valued by their ability to do something that's not write code,
for example purchasing departments are typically valued on their ability
to procure materials and services for a business as cheaply and effectively
as possible. Facilities maintenance is usually valued on their ability
to keep physical buildings as functional as possible by doing things
like changing lights or maintaining plumbing in restrooms. Quite clearly these groups 
are not valued on their ability program. A plumber is valued on his or her
ability to fix plumbing issues. In their role they won't primarily be evaulated
on their programming ability, if at all. &lt;/p&gt;
&lt;p&gt;If you're in this group learning to program might do nothing for your career,
and in fact &lt;strong&gt;learning to program might be a complete waste of time and effort.&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;With that distinct made in the next two posts will cover my opinion the
upsides and downsides as programming as a Non Programmer.&lt;/p&gt;</content><category term="Programming"></category><category term="Programming"></category></entry><entry><title>Programming as a Non Programmer - Part 1</title><link href="/NonProgrammerP1.html" rel="alternate"></link><published>2017-01-09T00:00:00+00:00</published><updated>2017-01-09T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2017-01-09:/NonProgrammerP1.html</id><summary type="html">&lt;p&gt;This is Part 1 in a series about how learning how to program could affect
your career and some of the experiences I've had with programming in mine&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Intent of series and introduction&lt;/li&gt;
&lt;li&gt;What Programming as a Non Programmer means&lt;/li&gt;
&lt;li&gt;Why Programming could be beneficial for your life and career …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;This is Part 1 in a series about how learning how to program could affect
your career and some of the experiences I've had with programming in mine&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Intent of series and introduction&lt;/li&gt;
&lt;li&gt;What Programming as a Non Programmer means&lt;/li&gt;
&lt;li&gt;Why Programming could be beneficial for your life and career&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;An Introduction&lt;/h1&gt;
&lt;p&gt;Whether you &lt;a href="https://www.google.com/webhp?sourceid=chrome-instant&amp;amp;ion=1&amp;amp;espv=2&amp;amp;ie=UTF-8#q=you%20should%20learn%20to%20code"&gt;should&lt;/a&gt;, 
&lt;a href="https://www.google.com/webhp?sourceid=chrome-instant&amp;amp;ion=1&amp;amp;espv=2&amp;amp;ie=UTF-8#q=why%20you%20should%20learn%20to%20code"&gt;or should not&lt;/a&gt;
learn to program (or code) is a pretty hotly contested topic. The opinions
usually focus on whether you quit your current career and focus on 
programming as a full time job, but there is another option of learning
programming on the side to supplement your current career. I'll be writing about
that.&lt;/p&gt;
&lt;p&gt;I'm not going to try to sway you one way or another, but I will give you
my thoughts and let you form your own decision. I'm writing this
so others trying to make a reasoned decision can consider my experience
if they find it useful. Although I've been exposed to computers
my entire life, I really picked it up professionally 5 years ago sort
of unintentionally.  &lt;/p&gt;
&lt;p&gt;Off the bat I'll say that learning to program on the side has been extremely
beneficial for my career. I've been able solve problems in my domain
that others couldn't, even full time "trained" programmers, and I've been able
to gain much more flexibility and satisfaction out of my job.&lt;/p&gt;
&lt;p&gt;However it wasn't the simplest thing, I wasn't able to do it in "24 hours"
or within one bootcamp, or even three. Even so others I knew didn't make
any traction at all, and learning to program really did nothing to benefit
their career. Even with my positive experience, discussions with others
have led me to advise them to avoid programming.
Programming isn't a silver bullet to success, even myself
typing right now I know programming alone is not going to be able to magically
be the one thing that makes everything awesome at my job. But its undeniable
that it's a skill, both as a hobby and as a marketable ability.&lt;/p&gt;
&lt;h1&gt;What to expect&lt;/h1&gt;
&lt;p&gt;In the upcoming articles I'll talk about some of the benefits, but also
challenges, I faced when attempting to do this, how I was able work the
new skills into my current career and how interactions with full time
developers worked and didn't work. In the next post I'll specifically
talk about what I mean with the title&lt;/p&gt;</content><category term="Programming"></category><category term="Programming"></category></entry><entry><title>My Guide on Data Science Programs</title><link href="/DSGuide.html" rel="alternate"></link><published>2016-12-01T00:00:00+00:00</published><updated>2016-12-01T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2016-12-01:/DSGuide.html</id><summary type="html">&lt;p&gt;I recently got accepted to the Udacity Artificial Intelligence Nanodegree program.
While I am planning to write about that when it starts, now is a good
time to talk about the experience I've had with previous Data Science programs.  &lt;/p&gt;
&lt;h2&gt;Why am I doing this?&lt;/h2&gt;
&lt;p&gt;As a beginner it's hard to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently got accepted to the Udacity Artificial Intelligence Nanodegree program.
While I am planning to write about that when it starts, now is a good
time to talk about the experience I've had with previous Data Science programs.  &lt;/p&gt;
&lt;h2&gt;Why am I doing this?&lt;/h2&gt;
&lt;p&gt;As a beginner it's hard to figure out what's worthwhile and what's
snake oil, and these days there seems to be hundreds of books, MOOCs, bootcamps
and traditional degrees that are vying for your money and time. For those
doing research I hope my experience gives you more information to make
an informed decision.&lt;/p&gt;
&lt;h2&gt;What basis does my opinion have?&lt;/h2&gt;
&lt;p&gt;In the past five years I've enrolled in the Thinkful Data Science course,
the Coursera Data Science specialization, the Udacity Data Analyst Nanodegree,
and was accepted to the Berkeley Masters in Data Science masters degree
program. Between these programs I've spent thousands of dollars and hours
trying to improve my skills with these programs. Not all of this time 
was well spent and I bet I could have spent about a third less to get
where I am now.&lt;/p&gt;
&lt;h2&gt;So where &lt;em&gt;are&lt;/em&gt; you now?&lt;/h2&gt;
&lt;p&gt;The details are in the &lt;a href="pages/About.html"&gt;About Me&lt;/a&gt; but essentially I do
data science work for a living. The programs above actually did help me
transition into the career I wanted, but as mentioned I could have made better
decisions.&lt;/p&gt;
&lt;h1&gt;The Guide&lt;/h1&gt;
&lt;p&gt;The six categories I've been exposed to are  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Self Learning from Internet&lt;/li&gt;
&lt;li&gt;Books&lt;/li&gt;
&lt;li&gt;Coursera Data Science Courses and Specialization&lt;/li&gt;
&lt;li&gt;Udacity Data Analyst Nanodegree&lt;/li&gt;
&lt;li&gt;Berkeley Masters in Data Science&lt;/li&gt;
&lt;li&gt;A PhD&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here's my thoughts on each one&lt;/p&gt;
&lt;h2&gt;Self Learn from Internet&lt;/h2&gt;
&lt;p&gt;This is certainly the easiest, cheapest, and most flexible. The hard
part though is piecing together an education that is cohesive and increases
in difficulty at an appropriate rate. You'll have to spend a lot of time
both figuring out what you want to learn, finding good resources on that topic
and actually learning it. Figuring out what you want to learn might seem
easy until you realize how many buzzwords now exist in the data science space.
Do you want to learn about Machine Learning or recommender systems? What about
Deep Learning, or how about Convolutional Neural Networks. What about
Theano, TensorFlow, or Caffe? When googling by yourself it takes a lot
of effort to figure out what topics are relevant and which ones are buzzwords.&lt;/p&gt;
&lt;p&gt;Sources in this category that I recommend are &lt;a href="www.kaggle.com"&gt;Kaggle&lt;/a&gt; and 
articles that appear on &lt;a href="www.hackernews.com"&gt;HackerNews&lt;/a&gt; and &lt;a href="www.datatau.com"&gt;DataTau&lt;/a&gt;
but there are literally thousands. You can also take the free courses 
from Coursera and Udacity. I'll be talking more about their paid programs
below.&lt;/p&gt;
&lt;h2&gt;Books&lt;/h2&gt;
&lt;p&gt;Similar to Internet learning you'll have to first find books that are
appropriate to the topic you want to learn. When you do find an appropriate
book however the good news is that it likely covers the topic into much
more detail than a series of blog posts does. However, the downside is that
it's hard to get feedback from a book and if you're left with questions
you have to revert to the Self Learn from the Internet method.&lt;/p&gt;
&lt;p&gt;An example of a book that I found to be informative includes
&lt;a href="http://statweb.stanford.edu/~tibs/ElemStatLearn/"&gt;Elements of Statistical Learning&lt;/a&gt;.
Again like the Internet category there are hundreds, if not thousands, of 
Data Science related books in every category and I could not possibly list
them all.  &lt;/p&gt;
&lt;p&gt;If you've read this far you must really be interested in learning Data Science.
If so that's good because everything from here down requires more commitment
and money.&lt;/p&gt;
&lt;h2&gt;Coursera Data Science Courses&lt;/h2&gt;
&lt;p&gt;Coursera has two ways you can learn. One is taking free courses, but the 
more notable is paying for their specializations. For the money Coursera's
Specializations give you two things that Books and Self Learning do not.
One is that they guide you through a series of Data Science topics over the
span of a couple of months, reducing the need for you to piece together
your own curriculum. The other and much more important, is they give you
a community and feedback on your assignments. The specializations require
you to pass quizzes and finish small two week projects that are peer reviewed. 
This is great because
getting feedback from others is in my opinion the best way to learn.&lt;/p&gt;
&lt;p&gt;However, the downside is that the reviewers are usually your peers, and they
unfortunately they don't know much more than you typically. Another downside
is their motive for feedback is usually just so they can pass the course themselves,
giving feedback is a requirement for passing. Therefore, I personally found
the feedback to be pretty weak. I made it through 8 out of 10 of the
courses in the Specialization before I stopped participating. The cost
of the Coursera Data Science program was a fixed 500 dollars.&lt;/p&gt;
&lt;h2&gt;Udacity Data Analyst Nanodegree&lt;/h2&gt;
&lt;p&gt;Udacity, like Coursera, has both free and guided courses. However, the major
difference I found was that Udacity gives you much more access to more experienced
mentors. The Udacity projects are much more substantive, some taking more 
than a month to complete, and during the process you get continuous feedback
from those more experienced mentors. The feedback was critical and 
forced me to really learn and execute concepts correctly. It was much different
than Coursera, from which i felt other peers would just rubber stamp my 
work so they could pass. The cost of the program was $200 dollars a month
for each month enrolled in the program with the program ending when you finished
all seven projects with passing reviews. If you finished within 12 months
Udacity refunded half the money, a clever way to keep you motivated.&lt;/p&gt;
&lt;p&gt;A potential downside of the Udacity program was that was self-paced, which 
is great if you have motivation, but bad when you didn't. &lt;/p&gt;
&lt;h2&gt;Berkeley Master in Data Science Program&lt;/h2&gt;
&lt;p&gt;The Master Degree programs are some of the newest kids on the block in terms
of Data Science accreditations. The allure is that they combine traditional
education with newer data science topics. I enrolled in the 
Berkeley program because I felt that I would get a comprehensive education 
with access to experts in the field, along with the Berkeley accreditation.
After all a number of the leading experts who pioneered the data methods that
are commonplace now graduated from Berkeley, Stanford, and other high
pedigree schools.&lt;/p&gt;
&lt;p&gt;However the programs are expensive, &lt;strong&gt;REALLY&lt;/strong&gt; expensive. The cost
for Berkeley's program came out to $60,000 dollars, not including additional
costs like applications fees, travel fees to the campus if you have to visit,
books etc. And the barrier to entry is high, you'll need to have a bachelors already
and complete a Masters degree application.&lt;/p&gt;
&lt;p&gt;Although I was accepted and attended roughly a month's worth of the lectures
I ultimately ended up dropping out because I felt the price to value ratio
was lot, especially since I already had spent tens of thousands of dollars on
two other bachelors and masters degrees. The program itself was well-thought-out
and well put together, but given the much cheaper alternatives above I couldn't
justify staying in the program after I learned more about it.&lt;/p&gt;
&lt;h2&gt;PhD&lt;/h2&gt;
&lt;p&gt;The last and hardest path is to
get a PhD in a field related to data science. After all nearly all the people
that have forged the way in Data methods have done so through research
and doctorate level work. I myself was enrolled in a PhD program but for
those considering this option you already know it's a very heavy investment
requiring at least half a decades worth of work. You're going to have
to read a lot more than this blog post, and do a lot of soul search, before
deciding if this option is really what you want to do.&lt;/p&gt;
&lt;h1&gt;The Other Options&lt;/h1&gt;
&lt;h2&gt;Bootcamps&lt;/h2&gt;
&lt;p&gt;There are Data Science Bootcamps run by companies like Metis. These
typically involve studying on site in places like New York through an intensive
12 week program. The cost seems to be in the multi thousands. For the money
though you get to build a network and get coaching in person.&lt;/p&gt;
&lt;p&gt;I never applied for this option because of the opportunity cost, I would
have had to quit a paying job, or quit a degreed program I was already in,
to participate in these. But if you have the time and money these may be a good
option for you.&lt;/p&gt;
&lt;h2&gt;Hands-on experience&lt;/h2&gt;
&lt;p&gt;If you can find someone that will mentor you at your job that is by far
the best option. Nothing beats real world experience in learning how to actually
do the job. You may need to refer to some of the learning above to get the
fundamentals but experience is a great teacher.&lt;/p&gt;
&lt;h1&gt;So what should I do?&lt;/h1&gt;
&lt;p&gt;If you're just starting out I suggest you start with an Udacity Nanodegree.
I think it has the best balance of low cost, but with expert mentorship
and just difficult enough projects to grow. After that you'll also have
enough experience to hone in on useful internet and book references without
getting fooled by marketing pitches.  And since a Nanodegree only typically
takes a year to complete, the time investment is pretty low.&lt;/p&gt;
&lt;p&gt;I personally don't think the MIDS program is worth the cost. A traditional
statistics or mathematics masters costs a third of the price at most
universities and I believe it's much more valuable.&lt;/p&gt;
&lt;p&gt;As for the PhD if you're reading this blog post as your first reference
I'll say having a PhD is a pretty significant achievement, but it's not a light
decision and you should really read more and think on if this is ultimately
the right choice for you.&lt;/p&gt;
&lt;p&gt;As always if you have any further questions feel free to send me a message
on LinkedIn or Github. &lt;/p&gt;</content><category term="Data Science"></category><category term="Education"></category></entry><entry><title>SQL for Data Analysts</title><link href="/SqlForDataAnalysts.html" rel="alternate"></link><published>2016-11-28T00:00:00+00:00</published><updated>2016-11-28T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2016-11-28:/SqlForDataAnalysts.html</id><summary type="html">&lt;p&gt;SQL is a very extensive language but as a Data Analyst you don't have to know
all the ins and outs to start doing useful work. Here's a list of SQL concepts
and commands in a rough order of importance for Data Analysts. I'm basing this
list off of my …&lt;/p&gt;</summary><content type="html">&lt;p&gt;SQL is a very extensive language but as a Data Analyst you don't have to know
all the ins and outs to start doing useful work. Here's a list of SQL concepts
and commands in a rough order of importance for Data Analysts. I'm basing this
list off of my experience using SQL to answer business questions at 
SpaceX and National Oilwell Varco. At both companies I used T-SQL/SQL Server
but the general ideas and commands are present in pretty much every flavor of
SQL.&lt;/p&gt;
&lt;h1&gt;The Basics&lt;/h1&gt;
&lt;p&gt;If you want to produce any results you'll have to start here.&lt;/p&gt;
&lt;h2&gt;1. Tables&lt;/h2&gt;
&lt;p&gt;Fundamental to relational databases is the concept of tables, all the data
is stored in these. Quickly learn how business concepts are reprsented in
tables. You'll quickly find that a couple central tables usually contain an
overwhelming majority of the useful information for a business area. For instance
sales, customers, expenses, etc. Start with those and inevitably
you'll start learning the others.&lt;/p&gt;
&lt;h2&gt;2. Select&lt;/h2&gt;
&lt;p&gt;Select is the workhorse command that will return your results. Might seem
obvious but there are some important concepts like select, like &lt;strong&gt;Select &lt;code&gt;*&lt;/code&gt; &lt;/strong&gt;,
&lt;strong&gt;Select Top&lt;/strong&gt; and the order in which Logical Query Processing executes a Select.
More on this later&lt;/p&gt;
&lt;h2&gt;3. Where&lt;/h2&gt;
&lt;p&gt;Getting a whole table isn't usually very useful. Learn the where filters
like the &lt;strong&gt;like&lt;/strong&gt; comparison, conditional filters, and datetime filters.&lt;/p&gt;
&lt;h2&gt;4. Joins&lt;/h2&gt;
&lt;p&gt;This is entirely fundamental to working with SQL. Aside from just getting
the query to execute, knowing when to use and inner vs left join can totally
change the meaning of your results. Master this quickly, including less
used joins like comma or natural joins.&lt;/p&gt;
&lt;h2&gt;5. Aliasing&lt;/h2&gt;
&lt;p&gt;As soon as you start joining tables together, you'll likely run into
duplicate column names on keys, or columns like CreateDate. Aliasing
will ensure the query processor is actually grabbing the columns you want,
but it will also mean you can rename columns to make sense to people. Aside from
column aliasing, table aliasing will also help you keep things straight and
is required for subqueries&lt;/p&gt;
&lt;h2&gt;6. Subquery Syntax&lt;/h2&gt;
&lt;p&gt;Sometimes you'll need to join half the rows from one table with half the rows
on another other table. Subqueries are the simplest way to do this.&lt;/p&gt;
&lt;h2&gt;7. Order By&lt;/h2&gt;
&lt;p&gt;People usually care the most about the highest or lowest values of things. When
you're returning millions of results you can't really scan by eye to figure
it out. Order by does the work for you and, like it sounds, orders results&lt;/p&gt;
&lt;h1&gt;Intermediate SQL&lt;/h1&gt;
&lt;p&gt;After getting the basics people will start asking more pointed questions like,
&lt;strong&gt;What's my sales per Region?&lt;/strong&gt; or &lt;strong&gt;What are the 2nd most expensive parts
we produce?&lt;/strong&gt; To answer these questions you'll need some more knowledge.&lt;/p&gt;
&lt;h2&gt;8a. Built-in Functions&lt;/h2&gt;
&lt;p&gt;You'll need to these to do things like sum over a column, or count the number
of records, but you'll also need these to numerically rank results.&lt;/p&gt;
&lt;h2&gt;8b. Groupby and Partition By&lt;/h2&gt;
&lt;p&gt;At the same time you'll need to learn how to use aggregations to use the functions
above. Usually people ask questions like what's the cost per part, or what's the
sales per region. A quick groupby and sum will answer these questions in a jiffy.
Partition by is another way to do aggregations that doesn't require subqueries
if you're only aggregating one column out of many. &lt;/p&gt;
&lt;h2&gt;9. Having&lt;/h2&gt;
&lt;p&gt;Where filters rows, having filters groups. Better explained with examples
that can be &lt;a href="http://www.w3schools.com/sql/sql_having.asp"&gt;found here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;10. Cross Apply and Outer Apply&lt;/h2&gt;
&lt;p&gt;Cross Apply and Outer Apply are advanced joins that let you use information
from one table into another in a more advanced way than traditional joins.
For instance one example is being able to use join on table valued functions
that results. Another is to use information from one table as a filter condition
in a subquery that's generating another table that you're joining on. You'll
quickly find out when you need these when you realize you can't accomplish certain
joins with just left and inner joins.&lt;/p&gt;
&lt;h1&gt;Advanced SQL&lt;/h1&gt;
&lt;h2&gt;11. Variables&lt;/h2&gt;
&lt;p&gt;Variables will you reuse values throughout your code and make certain things
more obvious. For instance if you're filtering for records after a certain date
sometimes you could put the dates directly in the where line, but after a while
it can become cumbersome to find it in your code. Declaring a variable at the
top with your date, and using the variable later in your code helps you
quickly modify your code and others. It especially helps when you reuse
the date multiple times, declaring it once as a variable means you only
need to edit it one place.&lt;/p&gt;
&lt;h2&gt;12. While Loops&lt;/h2&gt;
&lt;p&gt;With variables you can effectively use while loops. Variables and while loops
will be necessary to traverse databases that are representations of graph structures.
For example getting a reporting chain, to see who's boss, is who's boss, is who's boss.
Or getting all parts that are a part of a Bill of Material. Or tracing transactions
over time for a certain serial number part.&lt;/p&gt;
&lt;h2&gt;13. Common Table Expressions&lt;/h2&gt;
&lt;p&gt;Common table expressions are a useful way to annotate your code, they're
somewhat analogous to object oriented programming where you can slowly
build a results set over a more easily readable series of operations. You'll
see what I mean when your queries starts with select, has 20 columns from
various tables, and then 15 joins to get all the columns together. It gets
a bit hard to keep it all straight. &lt;/p&gt;
&lt;h2&gt;14. Recursive Common Table Expressions&lt;/h2&gt;
&lt;p&gt;However a big reason to learn Common Table Expressions is to take advantage
of recursive common table expressions. These serve a similar function
to while loops, but are a slightly different flavor and in my opinion are
a better syntax. Use this often to perform recursion on data concepts 
that require it.&lt;/p&gt;
&lt;h1&gt;Generating your own tables&lt;/h1&gt;
&lt;p&gt;Once your queries start getting complex it'll help to store results
in intermediate tables. To manage these you'll need to get familar with commands
such as &lt;/p&gt;
&lt;h2&gt;15. Select * into #table_name&lt;/h2&gt;
&lt;p&gt;The easiest way to create a temp table, just select some values and 
tell SQL Server to automagically create a table from the results.&lt;/p&gt;
&lt;h2&gt;16. Create Table&lt;/h2&gt;
&lt;p&gt;While Select Into is great, as you progress you'll sometimes need to
have more control over the data types and other details like indexes in your 
temp table. To do so you'll have to start with Create Table, which then allows
you to specify all of these details. &lt;/p&gt;
&lt;h2&gt;17. Insert Values into&lt;/h2&gt;
&lt;p&gt;An empty table is fairly useless though. &lt;strong&gt;Insert Values into&lt;/strong&gt; will
help you populate your newly created table quickly.&lt;/p&gt;
&lt;h2&gt;18. Drop Table&lt;/h2&gt;
&lt;p&gt;And sometimes you'll need to get rid of tables you created. Just be careful
because it's way easier to drop tables than create them.&lt;/p&gt;
&lt;h1&gt;The Other Stuff&lt;/h1&gt;
&lt;p&gt;There's additional concepts like modifying rows, altering columns,
stored procedures, and functions, but those start getting into the realm
of Database Administration, and sides by the time you get here anyway
you'll be strong enough with SQL to figure out what you need.&lt;/p&gt;
&lt;h1&gt;Getting Started&lt;/h1&gt;
&lt;p&gt;Don't let this list intimidate you, you can get a lot of value from just
the top 5 items. The others will come naturally as you figure out you need them
and hopefully this list will help you figure out the terms to google once
you get there.&lt;/p&gt;</content><category term="Data Science"></category><category term="SQL"></category></entry><entry><title>Using Linux</title><link href="/UsingLinux.html" rel="alternate"></link><published>2016-11-27T00:00:00+00:00</published><updated>2016-11-27T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2016-11-27:/UsingLinux.html</id><summary type="html">&lt;p&gt;Recently I decided to start using Linux again as a primary OS on my laptop. I'm
doing this because I believe Linux is the best OS to solve my problems and 
I'm committed on sticking with it this time. If you're deciding to do this I'll
walk you through my …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently I decided to start using Linux again as a primary OS on my laptop. I'm
doing this because I believe Linux is the best OS to solve my problems and 
I'm committed on sticking with it this time. If you're deciding to do this I'll
walk you through my choice to hopefully help eliminate some of your confusion
and avoid some of the mistakes I made.&lt;/p&gt;
&lt;h1&gt;Some History&lt;/h1&gt;
&lt;p&gt;This isn't my first time making this decision. For the past 20 years I've been
back and forth between Windows and Linux as my primary OS. Through the years
I've installed Mandrake Linux, RedHat, Fedora Core, Ubuntu, Backtrack and most
recently Arch Linux.  Here's some of the lessons I've learned.&lt;/p&gt;
&lt;h2&gt;Use good hardware for a good experience&lt;/h2&gt;
&lt;p&gt;I used to install Linux on laptops and desktops that were my "retired" devices. 
It didn't help that the computers I used to buy were already budget models when
they were new. While it's true Linux can be lightweight and can run on nearly
all hardware the experience will be hampered. &lt;/p&gt;
&lt;h2&gt;Be prepared to do some hardware configuration&lt;/h2&gt;
&lt;p&gt;When buying a Windows laptop the OEM configures everything to make it "just work"
hiding stuff like driver installation and configuration from you.
If you install a fresh copy of Windows you'll quickly see what I mean, things
like your display, sound, and wireless likely will require driver installations
and multiple reboots. And this is with an OEM that has a nice website with
all drivers easily available and dedicated support&lt;/p&gt;
&lt;p&gt;Linux is no different, you'll need to spend some time working through
peripherial installation. Expect this going in.&lt;/p&gt;
&lt;h2&gt;Just pick a distribution and go with it when first starting&lt;/h2&gt;
&lt;p&gt;With OSX and Windows you usually just use the latest version. For those being
nitpicky sure you could use an older version, and sure there's Windows Server
and variants like that, but for an end user there really is just one obvious choice.&lt;/p&gt;
&lt;p&gt;This isn't the case with Linux, there's numerous variations. If you're 
first starting just quickly pick the one that suits you the best to get 
familiar. Virtual Machines are helpful here as well so you can test 
many flavors without needing to go through the installation hassle. But don't
spend too much time worrying about it, just get started.&lt;/p&gt;
&lt;h2&gt;Don't feel like you can't look under the hood&lt;/h2&gt;
&lt;p&gt;Windows and OSX are closed source, and it's impossible and sometimes actively
discouraged to figure out what the OS is doing. Linux is the complete
opposite, as it's actively encouraged to learn the ins and outs. There's
a lot to learn but there's a helpful community to guide you through it. &lt;/p&gt;
&lt;h2&gt;Dual booting is doable but adds complexity&lt;/h2&gt;
&lt;p&gt;A tempting option is to dual boot your computer, so you can always switch back
to Windows with a quick reboot. This is certainly possible, and not difficult
to setup, but if you're new to working with computers at this level it becomes
all too easy to break things and subsequently difficult to repair. It's
my opinion that your life will be much easier initially if you just dedicate machine
to Linux. If you don't have two computers then go with a dual boot but if you
can spare the money and are dedicated to learning Linux a dedicated machine
will smooth the process.&lt;/p&gt;
&lt;h2&gt;Some applications just require Windows which makes switching costs higher&lt;/h2&gt;
&lt;p&gt;If you were wondering why I kept switching back and forth it was this.
Previously I needed programs like Solidworks to do my job. Even with 
Wine things just didn't work well. Unfortunately this also meant that I would
end up just spending more time with Windows and neglect Linux. The dual
boot option works here, but it does mean Linux will likely remain your
secondary computer if you need Windows programs in your daily tasks.&lt;/p&gt;
&lt;h1&gt;Get started&lt;/h1&gt;
&lt;p&gt;Hopefully this provides answers for some basic questions. I'll be
writing followup posts on why I picked Linux this time and an abbreviated tutorial
for installing Arch Linux.&lt;/p&gt;</content><category term="Programming"></category><category term="Programming"></category></entry><entry><title>Double Data Joins</title><link href="/DoubleDataJoin.html" rel="alternate"></link><published>2016-11-21T00:00:00+00:00</published><updated>2016-11-21T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2016-11-21:/DoubleDataJoin.html</id><summary type="html">&lt;p&gt;Perhaps the most fundamental concept of D3 is the &lt;a href="https://bost.ocks.org/mike/join/"&gt;data join&lt;/a&gt;
which shortly summarized compares a dataset in memory with the data in a selection.
New elements are &lt;strong&gt;entered&lt;/strong&gt;  where no matched data exists in the selection, 
current elements are &lt;strong&gt;updated&lt;/strong&gt; and missing elements are &lt;strong&gt;exited&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;One aspect that's easy …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Perhaps the most fundamental concept of D3 is the &lt;a href="https://bost.ocks.org/mike/join/"&gt;data join&lt;/a&gt;
which shortly summarized compares a dataset in memory with the data in a selection.
New elements are &lt;strong&gt;entered&lt;/strong&gt;  where no matched data exists in the selection, 
current elements are &lt;strong&gt;updated&lt;/strong&gt; and missing elements are &lt;strong&gt;exited&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;One aspect that's easy to miss though is that the results of a data join
are also a selection. This means you can chain data joins on top of each other. &lt;/p&gt;
&lt;h2&gt;An example&lt;/h2&gt;
&lt;p&gt;Say we have data that has a nested structure like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Strawberries&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Apple&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;BlueBerries&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can easily use this structure to our advantage using a d3 snippet like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;doubledatajoin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#example&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selectAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;div&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
           &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
             &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;div&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
             &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;color&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
           &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selectAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;p&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt;
           &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
             &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;p&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
             &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#button&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;click&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;doubledatajoin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div id="example"&gt;
  &lt;button type="button" id="button"&gt;Perform Double Data&lt;/button&gt;
&lt;/div&gt;

&lt;p&gt;By using two data joins we can add the corresponding adjectives to into the 
dom where it makes sense. The above example is quite trivial but where this
can become extremely useful is nested groups. By being able to create
hierarchical groups like this it becomes easy to transform, hide, and modify
like groups of elements. If you want an example of this feel free to contact me
and I can add one to this post. Otherwise, I hope you see the power of this
and just how powerful combining concepts in D3 can be.&lt;/p&gt;</content><category term="Data Science"></category><category term="Visualization"></category><category term="D3"></category></entry><entry><title>You should learn SQL</title><link href="/LearnSQL.html" rel="alternate"></link><published>2016-10-22T00:00:00+00:00</published><updated>2016-10-22T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2016-10-22:/LearnSQL.html</id><summary type="html">&lt;p&gt;I'm not the first to say this and I really doubt
I'll be the last. Being able to use and understand data is 
becoming, if not already, a very powerful skill. Let me
go through the two perspectives I've encountered below.&lt;/p&gt;
&lt;h1&gt;But I'm already learning Python/Pandas/R&lt;/h1&gt;
&lt;p&gt;Cool! So …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm not the first to say this and I really doubt
I'll be the last. Being able to use and understand data is 
becoming, if not already, a very powerful skill. Let me
go through the two perspectives I've encountered below.&lt;/p&gt;
&lt;h1&gt;But I'm already learning Python/Pandas/R&lt;/h1&gt;
&lt;p&gt;Cool! So you're already interested and well on your way to being
a data professional. Then there's two reasons you should learn
SQL.  &lt;/p&gt;
&lt;h2&gt;You'll become the data girl/guy faster&lt;/h2&gt;
&lt;p&gt;If you're trying to break into an analytical role your employer
will be much more supportive, and likely even pay you, if you
can show results. I would argue that SQL is the much quicker
route to get a data role and start gaining experience for
the following reasons.&lt;/p&gt;
&lt;h3&gt;Declarative vs Imperative Languages&lt;/h3&gt;
&lt;p&gt;Without going deeply into the nuances between declarative
and imperative languages what's easier to write and understand?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http: iris url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# This is dependent on your data source&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;TOP&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;IRIS&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With Python you'll have know how to import pandas, call
the correct method to read a csv file, know what argument
to pass to the read_csv method, know about variables, and then
know you can call a method on that assignment. A lot of the symbols
are not "English" intuitive either. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;TOP&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;IRIS&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Comparatively, SQL is much more approachable and basically reads straight across.
Now yes SQL has its own set of complexities and limitations but just starting
out it's been my experience that there's much less you need to learn
before you're able to do useful things. But.... &lt;/p&gt;
&lt;h3&gt;It's probably already setup for you&lt;/h3&gt;
&lt;p&gt;I don't have strong evidence to back this claim I would argue nearly all
businesses have a need to store data in tabular format and already do. This
means you just need to start querying it, without having to worry about setting
up a local Python or R environment, especially when most companies lock
down admin privileges anyway and make this sometimes difficult to do.&lt;/p&gt;
&lt;h3&gt;Since it's setup there's a resident Database Admin&lt;/h3&gt;
&lt;p&gt;If the assumption above holds there already will be at least one person
whose job it is to maintain that database who knows SQL. I would argue
there's more companies that pay a DBA than companies that are hiring data scientists.
In my experience nearly all companies have data these days, not nearly as many
have Python/R stack data scientists on staff.&lt;/p&gt;
&lt;h3&gt;SQL has a standard&lt;/h3&gt;
&lt;p&gt;SQL is more standardized than other data languages.
While there are differences the basic queries are pretty much the same
across platforms. The switching cost between Python and R is much higher.
This makes it easier to learn and use in a variety of settings, even if not 
every place you go uses the same database and SQL variant.&lt;/p&gt;
&lt;h3&gt;You're going to have to learn it anyway&lt;/h3&gt;
&lt;p&gt;Even if you end up using Pandas or R you'll have to find some data. While it's 
true a lot of data is not in database, a lot of data is in a database.&lt;/p&gt;
&lt;h2&gt;But I'm a manager&lt;/h2&gt;
&lt;p&gt;Even if you have direct reports that can write SQL, knowing a bit of SQL will
help you become much more literate. Some of the managers who I've worked with
have been able to use data to great effect to paint a story both to their 
direct reports and in discussions with their peers and superiors. It's harder
to argue with the results from a query.&lt;/p&gt;
&lt;h1&gt;In Conclusion&lt;/h1&gt;
&lt;p&gt;If you're relatively new to data it's my opinion that learning SQL gives you
the most "bang for your buck". It has a relatively low barrier to entry
given that most companies already use it, and it's simpler to start out with
and get useful results. And once your employer sees some results it'll be easier
to sneak some Python/R and fancier stuff in as well!&lt;/p&gt;</content><category term="Data Science"></category><category term="SQL"></category></entry><entry><title>SVG Rotation and Reusability</title><link href="/RotationAndReusability.html" rel="alternate"></link><published>2016-10-15T10:20:00+00:00</published><updated>2016-10-15T10:20:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2016-10-15:/RotationAndReusability.html</id><summary type="html">&lt;p&gt;SVGs aren't always the most straightforward to work it and also are deceptively
simple but as you'll get more familiar with the API you'll be able to
combine SVG "methods" to more easily get what you need.&lt;br&gt;
In this post we'll cover rotation and reusability of SVG elements as well …&lt;/p&gt;</summary><content type="html">&lt;p&gt;SVGs aren't always the most straightforward to work it and also are deceptively
simple but as you'll get more familiar with the API you'll be able to
combine SVG "methods" to more easily get what you need.&lt;br&gt;
In this post we'll cover rotation and reusability of SVG elements as well
as the practical problem this solved for me&lt;/p&gt;
&lt;h1&gt;The Backstory&lt;/h1&gt;
&lt;p&gt;At SpaceX I'm currently writing a program that will calculate a timeline
of activities and am using D3 for the visualization portion. For this particular
business process there are activities, things that happen over a period of time,
and milestones, significant dates that mark the completion of a series of activities&lt;/p&gt;
&lt;h1&gt;Gantt Charts&lt;/h1&gt;
&lt;p&gt;Schedules are nothing new, over a 100 years ago 
&lt;a href="https://en.wikipedia.org/wiki/Gantt_chart"&gt;the Gantt Chart&lt;/a&gt; was developed
to visualize and communicate project timelines
&lt;img alt="test" src="https://upload.wikimedia.org/wikipedia/commons/0/0b/ConceptDraw_Project_Gantt_Chart.png"&gt;&lt;/p&gt;
&lt;p&gt;There's now numerous visual encodings but the two that are most used are
the rectangle, displaying activity duration, and diamonds, which signify milestones
or completion times of important events.
&lt;div id="unclipped"&gt;&lt;/div&gt;&lt;/p&gt;
&lt;h1&gt;Creating a diamond&lt;/h1&gt;
&lt;p&gt;SVG supports a number of 
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes"&gt;basic shapes&lt;/a&gt;
Rectangles are one of these and creating one just requires easily understood parameters
such as x,y location of te top left corner and width and height.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;svg&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;10&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;10&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;20&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;40&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;20&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;20&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;20&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;40&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/rect&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;They can be represented in either of the formats above, the only difference
being the closing block for the svg element.The resulting SVG looks like this.
Seemingly unspectacular but actually pretty cool for only 4 lines of code.&lt;br&gt;
&lt;svg&gt;
  &lt;rect x="10" y="10" height="20" width="40"/&gt;
  &lt;rect x="20" y="40" height="20" width="40"&gt;&lt;/rect&gt;
&lt;/svg&gt;&lt;/p&gt;
&lt;p&gt;Our next challenge is representing a diamond. There is no basic shape for a
diamond in the SVG library. Given that we can't just "tell" the renderer
to draw a diamond we could instead manually "draw" the lines like this.  &lt;/p&gt;
&lt;p&gt;&lt;svg width=100 height=100&gt;
  &lt;path d="M50 15 L15 50 L50 85 L85 50 Z"&gt;&lt;/path&gt;
&lt;/svg&gt;&lt;/p&gt;
&lt;p&gt;But this feels like a bit much, we really just want a diamond.&lt;/p&gt;
&lt;h1&gt;Rotation&lt;/h1&gt;
&lt;p&gt;Taking a step back though if we think about it a diamond really is just 
a rotated rectangle. Luckily there is a simple method to rotate elements in SVGs.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;transform = &amp;quot;rotate(degrees, x,y)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the string above degrees are the degree of rotation, and x and y are
rotation center. If not specified the rotation center defaults to the origin
of the svg.&lt;/p&gt;
&lt;p&gt;Let's go through an example. Below is a basic rectangle like we saw above.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;width =&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height =&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;25&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;25&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;svg width ="100" height ="100"&gt;
  &lt;rect x="25" y="25" height="50" width="50"&gt;&lt;/rect&gt;
&lt;/svg&gt;  &lt;/p&gt;
&lt;p&gt;If we specify the rotation as so&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;width =&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height =&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;25&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;25&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50 &amp;quot;&lt;/span&gt;&lt;span class="na"&gt;transform=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;rotate(45, 50,50)&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/rect&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;we get the diamond with much less work!&lt;/p&gt;
&lt;p&gt;&lt;svg width ="100" height ="100"&gt;
  &lt;rect x="25" y="25" height="50" width="50" transform="rotate(45, 50,50)"&gt;&lt;/rect&gt;
&lt;/svg&gt;&lt;/p&gt;
&lt;p&gt;We had to specify the center of the relative to the SVG origin however. If we
translate the diamond slightly, without changing the rotate x and y coordinates
we end up with effects like what you see below. We still got a diamond
but it's not at the coordinates we wanted it to be.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;width =&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;400&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height =&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;400&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;200&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;200&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/rect&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;200&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;200&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;transform=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;rotate(45, 50,50)&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/rect&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;svg width ="400" height ="400"&gt;
  &lt;rect x="200" y="200" height="50" width="50" fill="blue"&gt;&lt;/rect&gt;
  &lt;rect x="200" y="200" height="50" width="50" transform="rotate(45, 50,50)"&gt;&lt;/rect&gt;
  &lt;circle cx="50" cy="50" r="10" fill="red"&gt;&lt;/circle&gt;
&lt;/svg&gt;
The blue square and the black diamond share the same x and y attribute, but since
the center of rotation is at red dot, the diamond isn't in the position as the
black square.&lt;/p&gt;
&lt;h1&gt;SVG Reusability&lt;/h1&gt;
&lt;p&gt;SVG has another trick up it's sleeve though. Take a guess what the following
SVG will look like.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;width =&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height =&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;defs&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;myshape&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/defs&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;svg width ="100" height ="100"&gt;
  &lt;defs&gt;
      &lt;rect id="myshape" x="0" y="0" height="50" width="50"/&gt;
  &lt;/defs&gt;
&lt;/svg&gt;
If you guessed nothing you were right. However there is geometry defined
and similar to the &lt;a href="/clippaths.html"&gt;clip paths&lt;/a&gt; tutorial it's wrapped
in &lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/defs"&gt;defs&lt;/a&gt; tags.&lt;/p&gt;
&lt;p&gt;Anything in defs tags can be reused by use of the "use" tag and referencing
the id of the element.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;width =&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height =&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;defs&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;myshape&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/defs&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;use&lt;/span&gt; &lt;span class="na"&gt;xlink:href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#myshape&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;10&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;svg width ="100" height ="100"&gt;
  &lt;defs&gt;
      &lt;rect id="myshape" x="0" y="0" height="50" width="50"/&gt;
  &lt;/defs&gt;
  &lt;use xlink:href="#myshape" x="10" y="10"/&gt;
&lt;/svg&gt;&lt;/p&gt;
&lt;p&gt;So for our diamond we can declare once and then use it anywhere with minimal effort.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;width =&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height =&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;defs&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;myshape&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/defs&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;use&lt;/span&gt; &lt;span class="na"&gt;xlink:href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#myshape&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;10&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;50&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;svg width ="200" height ="200"&gt;
  &lt;defs&gt;
      &lt;rect id="diamond" height="50" width="50" transform="rotate(45)"&gt;
  &lt;/defs&gt;
  &lt;use xlink:href="#diamond" x="50" y="50"/&gt;
  &lt;use xlink:href="#diamond" x="100" y="100"/&gt;
&lt;/svg&gt;&lt;/p&gt;
&lt;h1&gt;In Closing&lt;/h1&gt;
&lt;p&gt;Declaring elements in the defs tag is how DRY, Don't Repeat Yourself, is 
implemented in SVGs. As you can see they're also extremely useful in
very practical situations. If you have any questions feel free to contact
me either through my Linkedin or Github. I hope this was helpful!&lt;/p&gt;</content><category term="Programming"></category><category term="Visualization"></category></entry><entry><title>Clip Paths and Transforms</title><link href="/clippaths.html" rel="alternate"></link><published>2016-10-09T10:20:00+00:00</published><updated>2016-10-09T10:20:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2016-10-09:/clippaths.html</id><summary type="html">&lt;p&gt;When creating visualizations sometimes we want an element to be visible 
in one portion of the SVG but perhaps in another. An example would be a chart
with axes that also implements zoom and pan. As we move the chart elements
into the axes area we don't wany any overlap …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When creating visualizations sometimes we want an element to be visible 
in one portion of the SVG but perhaps in another. An example would be a chart
with axes that also implements zoom and pan. As we move the chart elements
into the axes area we don't wany any overlap.&lt;/p&gt;
&lt;h1&gt;An example&lt;/h1&gt;
&lt;p&gt;In the visualization below zoom and pan have been applied using the method in
the &lt;a href="/ImplementingD3Zoom.html"&gt;zoom and pan post&lt;/a&gt;. We only want the blue
dot to be visible in the blue region but it's clearly visible everywhere.&lt;/p&gt;
&lt;div id="unclipped"&gt;&lt;/div&gt;

&lt;h1&gt;Clip Paths&lt;/h1&gt;
&lt;p&gt;Luckily the SVGs support a concept called clip-path. The idea is simple,
essentially defining an area where elements are visible, however the implementation
is a bit more convoluted.  &lt;/p&gt;
&lt;p&gt;In our example above we only wanted the blue circle to be visible in the blue 
region. As with nearly everything in SVG we'll have to define the geometry.
However unlike other svg geometry it needs to be defined in the &lt;strong&gt;defs&lt;/strong&gt;
section of the svg.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;svg&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;defs&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;clipPath&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;bluerect&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="c"&gt;&amp;lt;!--Geometry goes here--&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/clipPath&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/defs&amp;gt;&lt;/span&gt; 
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/defs"&gt;defs&lt;/a&gt;
are a tag for reuseable elements in SVGs. In this case 
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/clipPath"&gt;clipPath&lt;/a&gt;
element needs to be defined in this block.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;svg&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;defs&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;clipPath&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;bluerect&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;x=&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt; &lt;span class="na"&gt;y=&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;300&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;150&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/rect&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/clipPath&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/defs&amp;gt;&lt;/span&gt; 
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once defined in the defs section the clip path can be applied to an element
by adding a &lt;strong&gt;clip-path&lt;/strong&gt; attribute on the element. The blue is removed
from the example code for code clarity. 
[ref] While sample bl.ocks are great sometimes when going through them
it's hard to isolate the specific feature I'm trying to learn
from all the other functionality[/ref]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;circle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;clip-path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;url(#cliprect)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div id="staticclipped"&gt;&lt;/div&gt;

&lt;p&gt;The clip path clearly worked but unfortunately it stick with the element
regardless of position. What we really want is the circle to be visible
depending on where it is in the svg.&lt;/p&gt;
&lt;h1&gt;Clip Path Groups&lt;/h1&gt;
&lt;p&gt;Before fixing the issue above it should be mentioned that clip paths 
can also be applied to groups. There are a lot of uses for it but in our 
case this is EXTREMELY handy as it allows us to do two major things&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apply a clip group to one circle but not another&lt;/li&gt;
&lt;li&gt;Apply the clip group to a group that is not transformed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The simplified SVG structure looks like this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;svg&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;g&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;alwaysvisiblecircle&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pan_and_zoom_class&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;circle&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/g&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;g&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;url(#clippathdef)&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;g&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pan_and_zoom_class&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;circle&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/g&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/g&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div id="clipped"&gt;&lt;/div&gt;

&lt;p&gt;This structure results in this visualization which does everything we want it
to! If you try dragging the circles, you'll notice that one of them starts
disapearing as it's location moves to the right, but start appearing again
if you move left&lt;/p&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;p&gt;The code for these visualizations are available on my Github. Additionally
there is a much more extensive writeup on clip paths written by
&lt;a href="https://sarasoueidan.com/blog/css-svg-clipping/"&gt;Sara Soueidan&lt;/a&gt; which
I highly recommend. &lt;/p&gt;</content><category term="Data Science"></category><category term="Visualization"></category></entry><entry><title>Writing good software requires you to have an opinion</title><link href="/OpinionatedSoftware.html" rel="alternate"></link><published>2016-10-03T10:20:00+00:00</published><updated>2016-10-03T10:20:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2016-10-03:/OpinionatedSoftware.html</id><summary type="html">&lt;p&gt;If you want to write good software I would argue that you have to develop a
a style based on experience partially based on experience but also with a 
large dose of personal opinion. In fact I would argue go as far to argue that
if you can't develop an …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you want to write good software I would argue that you have to develop a
a style based on experience partially based on experience but also with a 
large dose of personal opinion. In fact I would argue go as far to argue that
if you can't develop an opinion your growth a developer will be stunted.&lt;/p&gt;
&lt;p&gt;When you're starting to learn how to program, especially if you don't have a
mentor or aren't working in a team, you likely won't have a strong guide for code style.
But you want to learn how to write software so you just have to start
But without prior experience how do you structure your code?
If you're anything like me this means you'll
end up reading a lot of blog posts, Stack Overflow answers, and books to 
find "the best way" of doing things.&lt;/p&gt;
&lt;h1&gt;Some languages require you to opine right off the bat&lt;/h1&gt;
&lt;p&gt;Languages like Perl &lt;a href="https://en.wikipedia.org/wiki/There%27s_more_than_one_way_to_do_it"&gt;leave it up to you&lt;/a&gt;.
There really isn't a best way of doing things, so each programmer is left
with a choice of what they think is best. But as a learner this makes
things quite difficult as you'll have to both learn to read each style
and develop your own fairly early in your learning.&lt;/p&gt;
&lt;h1&gt;Sometimes the language has "one obvious way"&lt;/h1&gt;
&lt;p&gt;In Python there's "one obvious way" to do things. As a beginner this is great.
This means you can now google away and always find "the best way" to do things.&lt;/p&gt;
&lt;p&gt;For example if we want to print each letter I've seen a lot of beginners 
write this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Foo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Bar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Baz&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Great it works.
But now you wan to make your code better and you want to see how the experts 
structure their code. To do so you go out and pick up two books
"Writing Idiomatic Python" and "Effective Python".&lt;/p&gt;
&lt;p&gt;You read through and you see Item 10 in Idiomatic Python "Prefer Enumerate over Range"
and items 1.2.1 and 1.2.2 in "Writing Effective Python".&lt;/p&gt;
&lt;p&gt;"Now I know to iterate directly over an array rather over a range and index"
you say, and quickly write what almost everyone will agree is better or
more "Pythonic".&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;thing&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In Python you can actually get really far this way, as a community there are
a ton of "almost always" best practices for doing things and the Python
language does a great job encouraging this. For me it became routine to
figure out what I needed to do, then google "best way of doing X" for a while.&lt;/p&gt;
&lt;h1&gt;But there isn't always "one obvious way"&lt;/h1&gt;
&lt;p&gt;Let's say we have a new problem now. We now want to write a program that makes
requests to websites until it receives a 404 error. If they all work we want
a message telling us so.&lt;/p&gt;
&lt;p&gt;Here's out first attempt using the requests library. Writing Idiomatic Python
suggests this structure saying that "even if the for structure isn't clear,
our code is clear enough to teach them"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;google.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;facebook.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cnn.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
   &lt;span class="n"&gt;reqest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Request Failed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;All good&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However if we take a look at what Effective Python suggests using this approach&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;

&lt;span class="n"&gt;success&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;google.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;facebook.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cnn.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
   &lt;span class="n"&gt;reqest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;success&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
      &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Request Failed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;success&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
   &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;All good&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;but this is the exact opposite of what Idiomatic Python suggests. In fact
these two books completely disagree with each other, each saying each others
method is unreadable and harmful&lt;/p&gt;
&lt;h1&gt;It gets worse&lt;/h1&gt;
&lt;p&gt;Once you start moving into larger projects you'll find many differing opinions.
Want a web framework? Well there's django, flask, pyramid and pecan.
Unit Testing? Pick between Nose, Nose2, pytest, unittest, and doctest.
Even for this statically generated site there's Nikola, Pelican, Hyde&lt;/p&gt;
&lt;p&gt;Let's not even get started with Javascript.
Hell, even with simple text editors there's Atom, Sublime, vim, emacs, etc&lt;/p&gt;
&lt;h1&gt;Why you need to develop an educated opinion fast&lt;/h1&gt;
&lt;p&gt;If you can't make an educated choice quickly you'll never get anything done,
instead switching back and forth between whatever the last person told you
was the best way to do things&lt;/p&gt;
&lt;h1&gt;How to develop an educated opinion&lt;/h1&gt;
&lt;p&gt;Unfortunately there really isn't a way to do this other than take in the advice
from others, but then also apply them and see what works best for you. When
reading code or taking feedback pay close attention to why the person is arguing
for or against a method but think about how it fits into what you know and
what you need to get done.&lt;/p&gt;
&lt;h1&gt;But it's worth it&lt;/h1&gt;
&lt;p&gt;Watch &lt;a href="https://www.youtube.com/watch?v=bpZS9ehw98"&gt;this&lt;/a&gt; of Kenneth Reitz
the developer of the Requests library, which also happens to be the most
popular Python package of all time. Notice how opionated he is about the state
of other libraries and what he values in software. If Kenneth had tried
to design a library that made everyone happy, it likely wouldn't have made
anyone happy.  &lt;/p&gt;
&lt;h1&gt;In Closing&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;There rarely is one right way to do things. If you keep trying to search for one
you'll never get anything done.&lt;/li&gt;
&lt;li&gt;Take the time to develop your own opinion&lt;/li&gt;
&lt;li&gt;Do this taking the time to understand others opinions by taking in information&lt;/li&gt;
&lt;li&gt;But also develop your own by doing things&lt;/li&gt;
&lt;li&gt;You'll never get everyone to agree with your approach but that doesn't mean it's wrong&lt;/li&gt;
&lt;/ul&gt;</content><category term="Programming"></category><category term="Programming"></category></entry><entry><title>A Pivot</title><link href="/APivot.html" rel="alternate"></link><published>2016-10-01T10:20:00+00:00</published><updated>2016-10-01T10:20:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2016-10-01:/APivot.html</id><summary type="html">&lt;p&gt;Originally when I started this blog I was frustrated with the Data Science
Interview process, having been in it for a number of months. However,
shortly after starting this blog I was hired on full time by SpaceX, and
as a consequence stopped seeking interviews. &lt;/p&gt;
&lt;h1&gt;Where this put me&lt;/h1&gt;
&lt;p&gt;As …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Originally when I started this blog I was frustrated with the Data Science
Interview process, having been in it for a number of months. However,
shortly after starting this blog I was hired on full time by SpaceX, and
as a consequence stopped seeking interviews. &lt;/p&gt;
&lt;h1&gt;Where this put me&lt;/h1&gt;
&lt;p&gt;As luck would have it I was fortunate enough to be  placed into a data heavy department.
My day now heavily consists of data mining, visualizations, and data storytelling
all facilitated with heavy use of SQL, Javascript, Python, Tableau and whatever
else it takes. While I don't have the data scientist title I get asked to do
data science things daily. And as you may have guessed I have no issues with this :)&lt;/p&gt;
&lt;h1&gt;Where this leaves you (and this blog)&lt;/h1&gt;
&lt;p&gt;Instead of focusing specifically on the data scientist interview I'll focus more
on the topics that come up during the course of my work. For instance
I had to create a visualization in D3 &lt;a href="/ImplementingD3Zoom.html"&gt;which required zoom&lt;/a&gt;
As is such this blog for the time being this blog will focus more on data 
challenges present in the enterprise environment and moreso on manufacturing and
supply chain. I hope you still find the articles informative and useful
and as always feel free to use Github or LinkedIn to send me feedback!&lt;/p&gt;</content><category term="Life"></category><category term="Life"></category></entry><entry><title>D3 4.0 Zoom demystified</title><link href="/D3ZoomDemystified.html" rel="alternate"></link><published>2016-09-25T00:00:00+00:00</published><updated>2016-09-25T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2016-09-25:/D3ZoomDemystified.html</id><summary type="html">&lt;p&gt;In the &lt;a href="/ImplementingD3Zoom.html"&gt;last post&lt;/a&gt; we covered how to implement
basic zoom and pan in a D3 svg with one line but also left ourselves with an example
of an unexpected behavior.&lt;/p&gt;
&lt;p&gt;In this post will dig deeper to see what's happening under the hood and how we 
can get around …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In the &lt;a href="/ImplementingD3Zoom.html"&gt;last post&lt;/a&gt; we covered how to implement
basic zoom and pan in a D3 svg with one line but also left ourselves with an example
of an unexpected behavior.&lt;/p&gt;
&lt;p&gt;In this post will dig deeper to see what's happening under the hood and how we 
can get around our issue. Before we get into D3 let's start with the basics.&lt;/p&gt;
&lt;h2&gt;What is Zoom and Pan in an SVG?&lt;/h2&gt;
&lt;p&gt;SVG stands for Scalable Vector Graphics. Vectors are mathematical
of a magnitude and direction in a coordinate space. So when we're zooming, panning,
or rotating and skewing, an SVG we are &lt;strong&gt;applying coordinate transformations
to the vector space&lt;/strong&gt; that our computer eventually turns into graphics.&lt;/p&gt;
&lt;p&gt;In SVGs these coordinate transforms are defined by attributes such as matrix,
translate,scale,rotate etc. So for example if we wanted to "pan" a rectangle
SVG element we would add an attribute tag as so&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;rect&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;100&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;transform =&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;translate(50,50) scale(2)&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/rect&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The render inteprets this as move "50px right and 50px down from the origin and
double all the linear dimensions". For further details on the SVG spec take a look
at the &lt;a href="https://developer.mozilla.org/en/docs/Web/SVG/Attribute/transform"&gt;Mozillla Foundation Documentation&lt;/a&gt;
or visit this blog post by &lt;a href="https://sarasoueidan.com/blog/svg-transformations/"&gt;Sara Soueidan&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;What are DOM Events and Event handlers?&lt;/h2&gt;
&lt;p&gt;We won't get too far into this one but take a moment to think about the mechanics
of event handlers. If you're reading this blog you're likely aware that nothing
is "magic" in programming, but instead a well-structured set of rules has been implemented.&lt;/p&gt;
&lt;p&gt;In the case of zoom when the user clicks and drags an element, or a user scrolls
their mousewheel, in d3 we see that the SVG correspondingly reacts.&lt;/p&gt;
&lt;p&gt;Mozilla Foundation once again comes through and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Events"&gt;lists nearly all&lt;/a&gt;
the event handlers available. For those paying close attention you'll notice zoom
isn't listed, we'll cover that in a second.&lt;/p&gt;
&lt;h2&gt;How does D3 Implement Zoom&lt;/h2&gt;
&lt;p&gt;With an understanding how SVGs work with zoom and with how browsers handle events
we can now focus on D3 itself.
D3 implements zoom in two major piece, mostly encapsulated in two objects.
There's the &lt;strong&gt;d3.zoom&lt;/strong&gt; object, which creates a zoom behavior and applies
the zoom event handler to selections. This is where d3 also implements
its &lt;a href="https://github.com/d3/d3-zoom#api-reference"&gt;custom event handler&lt;/a&gt; "zoom"&lt;/p&gt;
&lt;p&gt;There's also the &lt;strong&gt;d3.ZoomTransform&lt;/strong&gt; element which stores the zoom transform
for a certain element. It is important to note at time of writing d3 does not support
rotate or any of the other SVG transforms in the Zoom API.&lt;/p&gt;
&lt;h2&gt;The One Liner explanation&lt;/h2&gt;
&lt;p&gt;With all this newfound knowledge let's dissect the one liner from the previous post,
here again for reference&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zoom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;transform&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;)}))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Working our way from the outside in&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you recall the svg variable here is a refernce to our svg. The call is a d3
method for applying a function to a selection&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zoom&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the next statement we are doing a couple of things. We're creating a zoom object,
&lt;a href="https://github.com/d3/d3-zoom#zoom"&gt;which is also a function&lt;/a&gt; and applying it
to svg through the call method. We also are binding the zoom behavior to the 
d3 zoom event handler&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zoom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;transform&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;)}))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In this last set of code we are telling d3 change the attribute "transform" on the svg
group g, whenever the zoom event is invoked. d3.event.transform returns
an svg string that details the current transform.&lt;/p&gt;
&lt;h2&gt;Why the initial visualization jumps&lt;/h2&gt;
&lt;p&gt;To answer our question from last week here's why the visualization jumps.&lt;/p&gt;
&lt;p&gt;When we initially create the svg group, we manually code the transformed
position as an attribute on the svg group, copied here for reference&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;transform&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;translate(&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;,&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;when we do this d3 has no "knowledge" of the state of the SVG, but the svg
"knows" and subsequently so does the browser rendering engine.&lt;/p&gt;
&lt;p&gt;After this when we initially try to drag or pan the element if you pay close
attention to the svg group attribute, you'll notice that the &lt;em&gt;translate&lt;/em&gt; 
attribute jumps to somewhere near (0,0). Since d3 is now adjusting
the transform attribute and since it still thinks everything is referenced
from an identity position, that's where the zoom starts.&lt;/p&gt;
&lt;p&gt;If the wording is confusing take a look at the adjusted code.
Starting with line 11 and 14, notice that we're creating an initial zoom object
and a zoomTransform object that we're offsetting.&lt;/p&gt;
&lt;p&gt;In line 29 were setting this zoomTransform object on svg. This is the key
line, the one that "tells" d3 the initial state of the transform.  &lt;/p&gt;
&lt;p&gt;We then go on to use this object to write the svg attribute string for us on line
34 and finally we set the event handler on the svg selection on line 42 and 43.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;zoom&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;svg&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;initial_transform&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;g&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;bottom&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;50&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;50&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;50&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//Create Initial Zoom Behavior&lt;/span&gt;
&lt;span class="nx"&gt;zoom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;//Set Initial Transform&lt;/span&gt;
&lt;span class="nx"&gt;initial_transform&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zoomIdentity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;svg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#margin_zoom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;svg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;height&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//Bounding Box&lt;/span&gt;
&lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rect&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;height&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;stroke&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;stroke-width&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2px&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;none&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//Replace initial SVG zoomTransform object with our previously transformed one&lt;/span&gt;
&lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initial_transform&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="nx"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;g&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;//Rather than manually write transform string let d3 do the work for us&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;transform&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initial_transform&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;circle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//Set the zoom Behavior, use the one initialized above instead of creating a new one&lt;/span&gt;
&lt;span class="nx"&gt;svg&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zoom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;transform&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;)}))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;What we covered&lt;/h2&gt;
&lt;p&gt;In the previous post we covered how to implement zoom and pan easily in one
line of code. In this post we covered how d3 controls zoom behavior with the 
d3.zoom() object/function and how d3 "remembers" zoom states by setting 
d3.zoomTransform objects on elements where transforms have been applied.  &lt;/p&gt;</content><category term="Data Science"></category><category term="Visualization"></category><category term="D3"></category></entry><entry><title>Implementing Zoom in D3 4.0</title><link href="/ImplementingD3Zoom.html" rel="alternate"></link><published>2016-08-27T00:00:00+00:00</published><updated>2016-08-27T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2016-08-27:/ImplementingD3Zoom.html</id><summary type="html">&lt;p&gt;D3 is a fantastic library for sharing and engaging users in visualizations.
One of the best ways it does this is by leveraging user interactions, by means
of clicks, drags, and scrolls to highlight data. We'll be exploring how to 
implement one of these interactions, the zoom interaction in D3 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;D3 is a fantastic library for sharing and engaging users in visualizations.
One of the best ways it does this is by leveraging user interactions, by means
of clicks, drags, and scrolls to highlight data. We'll be exploring how to 
implement one of these interactions, the zoom interaction in D3 4.0&lt;/p&gt;
&lt;h2&gt;The benefits of Zoom&lt;/h2&gt;
&lt;p&gt;In data visualization zooming is a handy method to allow the user both see the
whole picture but also the minute details. This also means the user can focus 
on the details that personally matter to them. Perhaps the most prevalent 
example of this is with services like Google Maps, where users can seamlessly
transition from a map of the entire world, to a detailed map of their neighborhood.&lt;/p&gt;
&lt;h2&gt;Zoom in D3&lt;/h2&gt;
&lt;p&gt;As with the rest of the library zoom in D3 the API is not immediately obvious,
and potentially frustrating. However as you become more familiar with it you'll
come to realize how well it implements an intuitive response and abstracts away
complicated mathematical but still leaves the ability to change the underlying behavior.&lt;/p&gt;
&lt;h2&gt;The One Liner&lt;/h2&gt;
&lt;p&gt;If you need basic zooming and panning behavior and in D3 it's extremely simple
to implement.  &lt;/p&gt;
&lt;p&gt;Let's start by creating an svg with a group and adding a circle to it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;svg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#basic_zoom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;svg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;height&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;g&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;circle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;circle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Adding zoom and pan behavior is one additional line&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zoom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;transform&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;)}))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div id="basic_zoom"&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Before you leave&lt;/strong&gt; note that the event listener has been applied to the svg
but the transformation is applied to the group.&lt;/p&gt;
&lt;h2&gt;Zoom + Margin convention&lt;/h2&gt;
&lt;p&gt;For the visualization I was building at first I was thrilled having solved
my problem, but I ran into another problem.  &lt;/p&gt;
&lt;p&gt;My visualization was using the &lt;a href="https://bl.ocks.org/mbostock/3019563"&gt;margin convention&lt;/a&gt;
and something odd was happening. See if you can find the same issue.&lt;/p&gt;
&lt;p&gt;Here's the code (bounding box added for reference)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;bottom&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;50&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;50&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;50&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;svg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#margin_zoom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;svg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;height&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//Bounding Box&lt;/span&gt;
&lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rect&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;height&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;stroke&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;stroke-width&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2px&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;none&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;g&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;transform&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;translate(&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;,&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;circle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zoom&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zoom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;transform&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;)}))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and here's the resulting visualization. Try zooming and panning and see if you
can spot the issue
&lt;div id="margin_zoom"&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;You may have noticed that on the initial event the circle jumps to the top
left corner (0,0 svg coordinates) but behaves normally after that. In the next
post I'll be explaining why this happens&lt;/p&gt;</content><category term="Data Science"></category><category term="Visualization"></category><category term="D3"></category></entry><entry><title>Modifying a Pelican Template</title><link href="/ModifyingATemplate.html" rel="alternate"></link><published>2016-07-10T00:00:00+00:00</published><updated>2016-07-10T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2016-07-10:/ModifyingATemplate.html</id><summary type="html">&lt;p&gt;After deciding to use a &lt;a href="/WhyIChoseaSSG.html"&gt;Statically Generated Site&lt;/a&gt;
I needed to pick a template. Trouble was that I had already found a template for
WordPress that I had liked.&lt;/p&gt;
&lt;p&gt;&lt;img alt="WordPressTheme" src="/images/PelicanTemplate/WordPressTemplate.png"&gt;
&lt;em&gt;The Wordpress theme&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;Luckily there was a &lt;a href="https://github.com/getpelican/pelican-themes"&gt;GitHubRepo&lt;/a&gt;
that had many prexisting themes and even more luckily there was one 
that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;After deciding to use a &lt;a href="/WhyIChoseaSSG.html"&gt;Statically Generated Site&lt;/a&gt;
I needed to pick a template. Trouble was that I had already found a template for
WordPress that I had liked.&lt;/p&gt;
&lt;p&gt;&lt;img alt="WordPressTheme" src="/images/PelicanTemplate/WordPressTemplate.png"&gt;
&lt;em&gt;The Wordpress theme&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;Luckily there was a &lt;a href="https://github.com/getpelican/pelican-themes"&gt;GitHubRepo&lt;/a&gt;
that had many prexisting themes and even more luckily there was one 
that was already a &lt;a href="https://github.com/jvanz/pelican-hyde"&gt;close fit&lt;/a&gt;
&lt;img alt="WordPressTheme" src="/images/PelicanTemplate/PelicanHydeTheme.png"&gt;
&lt;em&gt;The Pelican-Hyde theme&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;There were some things I didn't like though. I didn't like the sidebar size,
the links to social media, and the font, or that the sidebar was focused
on the bottom. Additionally I wanted the horizontal line element from the 
WordPress theme. Given that this theme was so close though, rather than
start from scratch I decided to modify the existing one instead.&lt;/p&gt;
&lt;h1&gt;Peeking under the hood&lt;/h1&gt;
&lt;p&gt;Given that this is a Statically Generated Site everything you see can be
traced back to a single file quite easily. However given this is still web
technology there is still the possibility that the formatting could be coming
from an html file and multiple css stylesheets. Bluntly put figuring out why
certain things are laid out a certain way, or why they're a certain color, can
still be a pain. Luckily though the Chrome Team developed awesome dev tools
which make figuring out what's going on much easier
&lt;img alt="ChromeDevTools" src="/images/PelicanTemplate/ChromeDevTools.png"&gt;
&lt;em&gt;Chrome Dev Tools&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In the screenshot above you can see a couple of awesome things. One is that
by highlighting over an element I can both see the code in the Document
Object Model and the full tree of CSS stylers that are changing it's appearance
and position. While I won't go into all the tools here, there are numerous
other tabs and functions to dive even deeper into more complex applications.
However in generality using the dev tools is what I used in the following
steps to deconstruct the Wordpress and Pelican themes&lt;/p&gt;
&lt;p&gt;&lt;img alt="ChromeDevTools" src="/images/PelicanTemplate/CSSModifications.png"&gt;
&lt;em&gt;Adding a Dark Green Class&lt;/em&gt;&lt;br&gt;
For the most part this modifying the CSS to reflect the styles we want.
For instance above an addition was made the CSS style sheets to allow for
a Dark Green class that uses the same green in the original WordPress Theme.&lt;/p&gt;
&lt;h1&gt;Modifying the template&lt;/h1&gt;
&lt;p&gt;I also wanted links to be added for the static pages to include pages 
such as About This Blog and References. Luckily Pelican decided to use 
the jinja2 templating engine which is simple to use.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Template Modifications" src="/images/PelicanTemplate/TemplateModification.png"&gt;&lt;/p&gt;
&lt;p&gt;By adding the above loop in white, links will now be added for each sidebar link.&lt;/p&gt;
&lt;h1&gt;Why does this matter for Data Science&lt;/h1&gt;
&lt;p&gt;As a data scientist part of the job is being able to present information
seamlessly and quickly. The Web was built for this 
Using it to be able to quickly and effectively use this medium is an extremely
useful skill to have in your communication toolset, and things like
the Chrome Devtools and jinja2 templating engine are extremely powerful
to template and style reusable webpages for reports and internal facing
dashboards.&lt;/p&gt;</content><category term="Programming"></category><category term="Tutorial"></category></entry><entry><title>Why a Statically Generated Site</title><link href="/WhyIChoseaSSG.html" rel="alternate"></link><published>2016-07-10T00:00:00+00:00</published><updated>2016-07-10T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2016-07-10:/WhyIChoseaSSG.html</id><summary type="html">&lt;p&gt;Initially when I decided to start this blog I started with what I already
had a WordPress blog. Wordpress had served me well in the past, especially
when I had a more limited programming background. Given the needs of this blog
however, a Statically Generated Site, turned out to be …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Initially when I decided to start this blog I started with what I already
had a WordPress blog. Wordpress had served me well in the past, especially
when I had a more limited programming background. Given the needs of this blog
however, a Statically Generated Site, turned out to be a better choice.&lt;/p&gt;
&lt;h2&gt;Syntax Highlighting&lt;/h2&gt;
&lt;p&gt;Wordpress syntax highlighting was ok, but not the best. Given that there 
would be a lot of code on this blog this was a huge knock against the WordPress
environment&lt;/p&gt;
&lt;h2&gt;Difficulty in supporting Javascript/D3&lt;/h2&gt;
&lt;p&gt;There is a plugin to support d3 in Wordpress but its docs only list
3.3, and given that 3.5 has been around for a while, and that 4.0 just got released,
it was evident that trying to embedded visualizations or javascript programs
into the blog wouldn't be straightforward&lt;/p&gt;
&lt;h2&gt;Latex support is limited&lt;/h2&gt;
&lt;p&gt;It seems that in WordPress all Latex equations have to be rendered as images
in formats such as png or svg. While this is fine for displaying the equation
it would be a pain for any reader that is trying to copy the content of the page.
While this limitation wasn't a dealbreaker it compounded my WordPress dislike.&lt;/p&gt;
&lt;h2&gt;Lots and lots of overhead (Mentally and Computationally)&lt;/h2&gt;
&lt;p&gt;WordPress is built on PHP and MySql and lots of HTML and CSS. It requires a 
backend to function. Even after all the setup it becomes cumbersome to modify
extensively, and to write posts I would have to go into a WebGUI and figure out
what buttons do what. When adding additional plugins to do syntax highlighting
and additional javascript it would become even more difficult to modify layouts
and figure out how to make things work&lt;/p&gt;
&lt;p&gt;Additionally, it would be a lot more work if I moved hosting services
and always be worried about updates and security&lt;/p&gt;
&lt;h2&gt;I already have enough to learn&lt;/h2&gt;
&lt;p&gt;Given that I'm trying to learn more about Data Science, it just made
more sense to pick a SSG using a Python based generator. 
This means I could stay in the same software stack I use for Data Science 
and continually learn about those things, rather than have to struggle with 
learning how WordPress works&lt;/p&gt;
&lt;p&gt;Briefly listed here are the tools used to maintain this blog now &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vim/Text Editor - All the content is written in text files  &lt;/li&gt;
&lt;li&gt;Python - Generates HTML from the text files  &lt;/li&gt;
&lt;li&gt;HTML/CSS - Layouts and styles the site  &lt;/li&gt;
&lt;li&gt;git - Helps maintains versions and publishes the site &lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;SSGs just make sense for a DS focused blog&lt;/h1&gt;
&lt;p&gt;In summary due to the programming/stat it just made sense to work with
something that had minimal overhead of use, used the same toolsets, and 
could render all the visualizations, math, and code nicely&lt;/p&gt;
&lt;h1&gt;Others opinions&lt;/h1&gt;
&lt;p&gt;In part I made my final choice based on the positive experiences of others
as well. Here are some links to their opinions&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bdadam.com/blog/why-i-chose-a-statically-generated-website.html"&gt;http://bdadam.com/blog/why-i-chose-a-statically-generated-website.html&lt;/a&gt;&lt;br&gt;
&lt;a href="http://duncanlock.net/blog/2013/05/17/how-i-built-this-website-using-pelican-part-1-setup/"&gt;http://duncanlock.net/blog/2013/05/17/how-i-built-this-website-using-pelican-part-1-setup/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.smashingmagazine.com/2015/11/modern-static-website-generators-next-big-thing/"&gt;https://www.smashingmagazine.com/2015/11/modern-static-website-generators-next-big-thing/&lt;/a&gt;&lt;/p&gt;</content><category term="Programming"></category><category term="Programming"></category></entry><entry><title>Interview Question: Finding a Match</title><link href="/PickingAdjectives.html" rel="alternate"></link><published>2016-04-25T00:00:00+00:00</published><updated>2016-04-25T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2016-04-25:/PickingAdjectives.html</id><summary type="html">&lt;p&gt;Two people join a dating site independently. Upon signing up they pick 5 words to
describe themselves out of 25 given words. If 4 out of 5 of the words are the
same the dating site declares they're a match. What's the probability
those couples match?&lt;/p&gt;
&lt;h2&gt;Question Format&lt;/h2&gt;
&lt;p&gt;Online text …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Two people join a dating site independently. Upon signing up they pick 5 words to
describe themselves out of 25 given words. If 4 out of 5 of the words are the
same the dating site declares they're a match. What's the probability
those couples match?&lt;/p&gt;
&lt;h2&gt;Question Format&lt;/h2&gt;
&lt;p&gt;Online text input box&lt;/p&gt;
&lt;h2&gt;Time Constraint&lt;/h2&gt;
&lt;p&gt;1 of 20 problems on a one hour test&lt;/p&gt;
&lt;h2&gt;Context&lt;/h2&gt;
&lt;p&gt;This question was a 1st round automated interview test.&lt;/p&gt;
&lt;h2&gt;Standard Assumptions&lt;/h2&gt;
&lt;p&gt;Given problems like this it's safe to assume the picks are independent
both between the people, and even between the words themselves. In real life
if the adjectives "vegetarian" and "steak eater" were in the same list
it's unlikely the same person would pick both and the choices. Would not 
entirely be independent. Likewise if the two people were already dating it
that also would not be independent. But this is a probability 
multiple choice test so assume independence.&lt;/p&gt;
&lt;p&gt;Another trick which greatly simplifies the problem
is to assume one person already picked 5 words so find 
the probability the other person picks 4 out of the 5 words.
Mathematically it's the same but conceptually it helps
me work with the problem more easily.&lt;/p&gt;
&lt;h2&gt;Solution 1&lt;/h2&gt;
&lt;p&gt;If you're unlucky there's a chance you'll blank on the elegant
way to solve this.&lt;br&gt;
However if you're partially lucky you'll be sitting in 
front of a computer with no one around.&lt;/p&gt;
&lt;p&gt;As it turns out I was partially lucky.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Python Monte Carlo Simulation&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;

&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="n"&gt;number_of_trials&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;matches&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;number_of_trials&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1000000&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;c1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;replace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="n"&gt;c2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;replace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;c2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;matches&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="n"&gt;number_of_trials&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matches&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;number_of_trials&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above code is as crude as it gets. Python
randomly picks 5 integers out of 24 with no replacement twice.
It turns compares it's picks. If 4 match the numerator
increments by one. For each pair of random picks the 
denominator increments by one. &lt;/p&gt;
&lt;p&gt;If we do this a million times we get a number really close
to the closed form solution. It actually turns out that
this simulation gets close to the real answer really quickly
in close to 1000 iterations which is less than 2 seconds 
on my laptop.&lt;/p&gt;
&lt;p&gt;This type of solution is called the Monte Carlo method.
It's actually very useful for a wide range of problems
that are too complicated for closed form solutions.
But for this problem there are better solutions.&lt;/p&gt;
&lt;h2&gt;Solution 2&lt;/h2&gt;
&lt;p&gt;But before we get to the better solution let's say you're
really unlucky.  You both forgot the elegant method
and don't have a computer. This problem can be brute forced.  &lt;/p&gt;
&lt;p&gt;To restate the problem this individual needs to pick 
4 specific words out of 25 with no replacement with 5 picks.
Let's call this individual Sam.  &lt;/p&gt;
&lt;p&gt;Limiting this to two picks on the first pick there's a 
5 out of 24 chance that Sam will pick a "match" word
and a 19 out of 24 that the person will pick a "non match" word.&lt;/p&gt;
&lt;p&gt;However on the second pick the probability is dependent on
the first pick. If the first pick was a "match" word
there is now a 4 out of 23 chance that Sam will pick
a "match" word. Likewise there is a 19/23 chance Sam
will pick a non match word.&lt;/p&gt;
&lt;p&gt;Since each pick is independent we can multiply the probabilities
to get the chance of a sequence of picks. We also can add
each way the picks could play out to get the total chance
at least 4 match. To save yourself a lot of multiplication
and division here's the math in Python.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="c1"&gt;#All five match&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 

&lt;span class="c1"&gt;#First four are match words, last one isn&amp;#39;t&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;

&lt;span class="c1"&gt;#First 3 are match words, 4th doesn&amp;#39;t, last does&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt;

&lt;span class="c1"&gt;#First 2 are match words, 3rd doesn&amp;#39;t, last 2 do&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt;

&lt;span class="c1"&gt;#First matches words, 2nd doesn&amp;#39;t, last 3 do&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt;

&lt;span class="c1"&gt;#First doesn&amp;#39;t match, last 4 do&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you multiplied and divided by hand it would be a pain
but you would get the exact answer.&lt;/p&gt;
&lt;p&gt;If you typed the above by hand into Python
it would also be a pain and you'd get almost
the right answer.
(You don't because of floating point error)&lt;/p&gt;
&lt;h2&gt;Solution 3&lt;/h2&gt;
&lt;p&gt;If you were really on your game though you'd realize
that this is a combinatorics problem. Essentially we need to pick
X winning combinations out of Y possible combinations.&lt;/p&gt;
&lt;p&gt;In combination notation it looks like this.
$${{5 \choose 4}{19 \choose 1} + {5 \choose 5}{19 \choose 0}}
  \over {25 \choose 5}$$  &lt;/p&gt;
&lt;p&gt;In python we can use the Combinations function to get the answer&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;itertools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;combinations&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;    k combination of out length n set&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;combinations&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="n"&gt;numerator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;cl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;cl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;cl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;cl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;denominator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;numerator&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;denominator&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There are some additional tricks that would allow you to simplify the calculation
even further but I leave it up to you to explore combinatorics further&lt;/p&gt;</content><category term="Statistics"></category><category term="Interview"></category></entry><entry><title>Interview Question: Friend Circles</title><link href="/FriendsCircles.html" rel="alternate"></link><published>2016-04-23T00:00:00+00:00</published><updated>2016-04-23T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2016-04-23:/FriendsCircles.html</id><summary type="html">&lt;p&gt;There are N students in a class. Some of them are friends, while some are not.
Their friendship is transitive in nature, i.e., if A is friend of B and B is friend of C,
then A is also friend of C. A friend circle is a group of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There are N students in a class. Some of them are friends, while some are not.
Their friendship is transitive in nature, i.e., if A is friend of B and B is friend of C,
then A is also friend of C. A friend circle is a group of students who are directly or
indirectly friends.
You have to complete a function int friendCircles(char[][] friends) which returns the
number of friend circles in the class. Its argument, friends, is a NxN matrix which
consists of characters 'Y' or 'N'. If friends[i][j] = 'Y', then i and j students are
friends with each other, otherwise not. You have to return the total number of
friend circles in the class.
Note: The method signature will differ by language. For example, Java will have 'int
friendCircles﴾String[] friends﴿' where "friends" is an array of strings, which can be
viewed as a 2 dimensional array of characters.&lt;/p&gt;
&lt;p&gt;Constraints:&lt;br&gt;
-  1 &amp;lt;= N &amp;lt;= 300&lt;br&gt;
-  Each element of matrix friends will be 'Y' or 'N'&lt;br&gt;
-  Number of rows and columns will be equal in friends&lt;br&gt;
-  friends[i][i] = 'Y', where 0 &amp;lt;= i &amp;lt; N&lt;br&gt;
-  friends[i][j] = friends[j][i], where 0 &amp;lt;= i &amp;lt; j &amp;lt; N  &lt;/p&gt;
&lt;h2&gt;Question Format&lt;/h2&gt;
&lt;p&gt;Online coding challenge&lt;/p&gt;
&lt;h2&gt;Time Constraint&lt;/h2&gt;
&lt;p&gt;1 of 3 Coding problems 2 Hours given&lt;/p&gt;
&lt;h2&gt;Context&lt;/h2&gt;
&lt;p&gt;This question was a 2nd round automated interview question
given after passing multiple choice statistics question&lt;/p&gt;
&lt;h2&gt;Initial thoughts&lt;/h2&gt;
&lt;p&gt;When I saw this question I made a critical error
in my initial understanding of what a friends circle meant.&lt;/p&gt;
&lt;p&gt;I was able to make the first key insight which is that the friends and relationships are a structure called
Network Graph. The problem is asking to find the number
of unique relationships that span friends. I first
ran into my first issue here.&lt;/p&gt;
&lt;p&gt;Because of the title Friends Circles I became fixated
on the thought that a closed loop is what I was
looking for. Loops in graphs are called cycles
and numerous algorithms exist to find them. However
this is not what this question was asked for and I wasted
pretty much 40 minutes implementing this solution.&lt;/p&gt;
&lt;h2&gt;Where I went wrong&lt;/h2&gt;
&lt;h3&gt;Not understanding the question&lt;/h3&gt;
&lt;p&gt;During the interview I wasn't able to understand the 
question correctly. Unfortunately since I had no human
interviewer I was unable to ask for clarification&lt;/p&gt;
&lt;h3&gt;Too slow to iterate&lt;/h3&gt;
&lt;p&gt;It became apparent to me that my understanding was
wrong when I failed the majority of the test cases.
But I had already wasted 30 minutes to get to that point
and ran out of time&lt;/p&gt;
&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;It was misleading that the problem was titled Friends Circles
because the problem is actually asking how many people
are connected through their friends and their 
friends. In math terms it's asking how many groups
of nodes are connected by their edges.  &lt;/p&gt;
&lt;p&gt;Given this understanding the problem is extremely simple.
Any graph can be composed into a tree. This is a concept
called tree composition. In this problem all we needed
to do was pick a node, run a depth first search algorithm
to find all the nodes that share a tree, then move onto the
next node and try again. The number of unique trees
is the answer to all the test cases.&lt;/p&gt;
&lt;h2&gt;Code&lt;/h2&gt;
&lt;p&gt;The first order of business is to read in the inputs that look like this  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;YYNN  
YYYN  
NYYN  
NNNY  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;into a sparse matrix that looks like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
           &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
           &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
           &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:[]&lt;/span&gt;
           &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I chose the sparse matrix because beside being very human readable it also
lends itself to the search process.&lt;/p&gt;
&lt;p&gt;Given a sparse matrix we can now find circles by doing a depth first search
of that person's friends as shown below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find_circles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;friends_dict&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;    Iterate through friends dict to find &lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find_friends&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;        Recursive function that does Depth First Search of all friends&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;visited&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;visited&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;friend&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;friends_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                &lt;span class="n"&gt;find_friends&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;friend&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;

    &lt;span class="n"&gt;visited&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;circle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;friends_dict&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;visited&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;find_friends&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;circle&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;circle&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The algorithm works initially picking a node. It then traverses the tree
to find all others nodes (friends) that are connected with the initial node.
When it exhausts all friends in the chain it tries the next node.&lt;/p&gt;
&lt;p&gt;In particular is the find_friends function. This is the workhouse
of this implementation. It recursively finds the friends of the current node.
The find_circles function mostly acts as an outer wrapper, storing the
friends count and the visited list.&lt;/p&gt;
&lt;p&gt;The visited list is particularly important because it ensures two things.
One is that we don't waste computational time finding all the friends of a 
person we've already searched. Additionally, it allows the find_friends
function to terminate once all the visited friends in a tree have been found.&lt;/p&gt;
&lt;h2&gt;Visualization&lt;/h2&gt;
&lt;p&gt;Here's a visualization of the search process. You notice that once the algorithm
finds a tree it stays on it until there are no more nodes left.&lt;/p&gt;
&lt;p&gt;To make this visualization the algorithm was also reimplemented in javascript which
you can find here. The visualization is possible due to the awesome
d3 javascript library which will get a post of its own in the future&lt;/p&gt;
&lt;h3&gt;Click to start search&lt;/h3&gt;
&lt;p&gt;&lt;div id="vis"&gt; &lt;/div&gt;&lt;/p&gt;</content><category term="Programming"></category><category term="Visualization"></category><category term="Algorithms"></category><category term="Interview"></category></entry><entry><title>Hi, I'm Ravin</title><link href="/index.html" rel="alternate"></link><published>2016-04-21T00:00:00+00:00</published><updated>2016-04-21T00:00:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2016-04-21:/index.html</id><summary type="html">&lt;style type="text/css"&gt;
    h1, h2, h3, h4 {
        text-align: center;
    }
    h1:not(.page-title), h2, h3, h4 {
        margin-top: 2.5rem;
    }

    .about-container {
        display: flex;
        flex-wrap: flex-wrap;
    }
    .about-container div.about-box {
        width: 50%;
        padding: 2rem;
    }
    #action-links {
        max-width: 100%;
        margin: 10px auto;
        display: flex;
        flex-wrap: wrap;
        flex-direction: column;
        justify-content: center;
    }
    .action-link, .secondary-box {
        border-radius: 5px;
        margin: 1.5%;
        padding: 15px …&lt;/style&gt;</summary><content type="html">&lt;style type="text/css"&gt;
    h1, h2, h3, h4 {
        text-align: center;
    }
    h1:not(.page-title), h2, h3, h4 {
        margin-top: 2.5rem;
    }

    .about-container {
        display: flex;
        flex-wrap: flex-wrap;
    }
    .about-container div.about-box {
        width: 50%;
        padding: 2rem;
    }
    #action-links {
        max-width: 100%;
        margin: 10px auto;
        display: flex;
        flex-wrap: wrap;
        flex-direction: column;
        justify-content: center;
    }
    .action-link, .secondary-box {
        border-radius: 5px;
        margin: 1.5%;
        padding: 15px;
    }
    .action-link, .my-work {
        display: flex;
        flex-direction: row;
    }
    .action-link {
        width: 100%;
        background-color: #f4f5fb;
        -webkit-transition: all 0.15s ease;
        transition: all 0.15s ease;
    }
    .action-link img {
        height: 60px;
        width: 60px;
        margin: auto 0;
    }
    .action-link h3 {
        margin: auto 1rem;
    }  
    .action-link:hover {
        box-shadow: 0 0 10px #ccc;
    }
    .secondary-box {
        border: solid 1px #56bb92;
        min-height: 100px;
        margin-top: 1.5rem;
    }
    .secondary-box img {
        max-height: 80px;
        margin: auto 0;
    }
&lt;/style&gt;

&lt;p&gt;&lt;svg viewbox="0 0 100 100" style="opacity:12%;max-width:100px;max-height:100px; margin:40px auto;"&gt;
    &lt;style type="text/css"&gt;
        path {
            fill: none;
            stroke: #12221D;
            stroke-width: 0.1rem;
            stroke-miterlimit: 10;
            stroke-linecap: round;
        }
        #K-triangle-1,
        #K-triangle-2 {
            stroke-dasharray: 1;
            stroke-dashoffset: 1;
            animation: dash 2s linear forwards;
        }
        #R-triangle-circle {
            stroke-dasharray: 1;
            stroke-dashoffset: 1;
            animation: dash 2.4s linear forwards;           }
        @keyframes dash {
            to {
                stroke-dashoffset: 0;
            }
        }
    &lt;/style&gt;
    &lt;g id="R"&gt;
        &lt;path id="R-triangle-circle" d="M 15 42.1297 L 43.5792 91.6304 L 15 91.6304 L 15 8.3696 A 32.0984 32.0984 0 0 1 15 72.5664 Z" pathLength="1"/&gt;
    &lt;/g&gt;
    &lt;g id="K"&gt;
        &lt;path id="K-triangle-1" d="M 56.2434 58.1775 L 85 8.3696 L 56.2434 8.3696 Z" pathLength="1"/&gt;
        &lt;path id="K-triangle-2" d="M 56.2434 42.1297 L 85 91.6304 L 56.2434 91.6304 Z" pathLength="1"/&gt;
    &lt;/g&gt;
&lt;/svg&gt;&lt;/p&gt;
&lt;div class="about-container"&gt;
&lt;!-- Left --&gt;
&lt;div class="about-box"&gt;
&lt;h1 style="margin-top:0; text-align: left;"&gt;About Me&lt;/h1&gt;
    &lt;p&gt;I am a data scientist at Google. My focus is supporting strategic decision making with data, although all my opinions here are my own. Previously, I worked at Sweetgreen and SpaceX, doing the same line of work as now but on different applications, which is using data to inform staffing strategy and rocket launch cadence.&lt;/p&gt;

    &lt;p&gt;To become a better "decision" scientist, I'm currently focusing on three topics:&lt;/p&gt;
    &lt;ol&gt;
        &lt;li&gt;Organizational influence and leadership&lt;/li&gt;
        &lt;li&gt;Advanced applied mathematics, e.g. Causal Inference, Decision Theory&lt;/li&gt;
        &lt;li&gt;Something else TBD&lt;/li&gt;
    &lt;/ol&gt;
    &lt;p&gt;I like to share and teach the skills I've found useful from my career, whether it be here or in my blog, on YouTube, or as part of my course series.&lt;/p&gt;
    &lt;p&gt;If you'd prefer to have updates pushed to you, you can subscribe to my mailing list.&lt;/p&gt;
    &lt;p&gt;I also contribute heavily to open source, mainly with &lt;a href="https://arviz-devs.github.io/arviz/index.html"&gt;ArviZ&lt;/a&gt; and &lt;a href="https://docs.pymc.io/"&gt;PyMC&lt;/a&gt;.&lt;/p&gt;
    &lt;p&gt;I'm always happy to connect with interested folks. Feel free to reach out anytime.&lt;/p&gt;
&lt;/div&gt;

&lt;!-- Right --&gt;
&lt;div class="about-box"&gt;
&lt;h1 style="margin-top:0; text-align: left;"&gt;My Ongoing Work&lt;/h1&gt;
&lt;a href="https://github.com/canyon289/canyon289.github.io"&gt;&lt;div class="action-link"&gt;&lt;img src="/images/about/github.png" /&gt;&lt;h3&gt;My Open Source Profile&lt;/h3&gt;&lt;/div&gt;&lt;/a&gt;
&lt;a href="https://www.youtube.com/channel/UCX78cJQ_6JZVUWw8cj-f0uA/featured"&gt;&lt;div class="action-link"&gt;&lt;img src="/images/about/youtube.png" /&gt;&lt;h3&gt;My YouTube Channel&lt;/h3&gt;&lt;/div&gt;&lt;/a&gt;
&lt;a href="/blog.html"&gt;&lt;div class="action-link"&gt;&lt;img src="/images/logo/logo.png" /&gt;&lt;h3&gt;My Blog&lt;/h3&gt;&lt;/div&gt;&lt;/a&gt;
&lt;div class="secondary-box" style="width: 100%;"&gt; 
    &lt;h3 style="margin-top:0;"&gt;Join my mailing list for updates&lt;/h3&gt;
    &lt;p&gt;Get the latest updates on my blog posts, new YouTube series, upcoming talks, ongoing collaborations, and thoughtful discussions. You can unsubscribe at anytime.&lt;/p&gt;
    &lt;form class="ml-block-form" action="https://static.mailerlite.com/webforms/submit/k0j3t8" data-code="k0j3t8" method="post" target="_blank" style="height: 32px;"&gt;
    &lt;div class="ml-form-formContent horozintalForm"&gt;
    &lt;div class="ml-form-horizontalRow"&gt;
    &lt;div class="ml-input-horizontal"&gt;
    &lt;div style="width:100%" class="horizontal-fields"&gt;
    &lt;div class="ml-field-group ml-field-email ml-validate-email ml-validate-required"&gt;
    &lt;input type="email" class="form-control" data-inputmask="" name="fields[email]" placeholder="Email" autocomplete="email" aria-invalid="false"&gt;
    &lt;/div&gt;
    &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ml-button-horizontal primary"&gt;
    &lt;button type="submit" class="primary" style="font-weight: 700; font-size: 14px;"&gt;Subscribe&lt;/button&gt;
    &lt;button disabled="disabled" style="display:none" type="button" class="loading"&gt; &lt;div class="ml-form-embedSubmitLoad"&gt;&lt;/div&gt; &lt;span class="sr-only"&gt;Loading...&lt;/span&gt; &lt;/button&gt;
    &lt;/div&gt;
    &lt;/div&gt;
    &lt;/div&gt;
    &lt;input type="hidden" name="ml-submit" value="1" aria-invalid="false"&gt;
    &lt;div class="ml-mobileButton-horizontal"&gt;
    &lt;button type="submit" class="primary" style="font-weight: 700; font-size: 14px;"&gt;Subscribe&lt;/button&gt;
    &lt;button disabled="disabled" style="display:none" type="button" class="loading"&gt; &lt;div class="ml-form-embedSubmitLoad"&gt;&lt;/div&gt; &lt;span class="sr-only"&gt;Loading...&lt;/span&gt; &lt;/button&gt;
    &lt;/div&gt;
    &lt;input type="hidden" name="anticsrf" value="true" aria-invalid="false"&gt;
    &lt;/form&gt;
 &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;h1&gt;See my work&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://bayesiancomputationbook.com/welcome.html"&gt;&lt;div class="secondary-box my-work"&gt;
    &lt;img src="/images/about/book.jpeg" /&gt;
    &lt;div class="my-work-text"&gt;&lt;h3&gt;Book on Bayesian Statistics&lt;/h3&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/a&gt;
&lt;a href="https://www.intuitivebayes.com/"&gt;&lt;div class="secondary-box my-work"&gt;
    &lt;img src="/images/about/course.png" /&gt;
    &lt;div class="my-work-text"&gt;&lt;h3&gt;Course on Intuitive Statistics&lt;/h3&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;
&lt;style&gt; h3 {text-align: left} &lt;/style&gt;

&lt;h1&gt;Talks&lt;/h1&gt;
&lt;h3&gt;Intro to Bayesian Model Evaluation and Visualization&lt;/h3&gt;
&lt;p&gt;SciPy 2019&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=bmWMdVQlzIA&amp;amp;E"&gt;Recording&lt;/a&gt;
&amp;nbsp;
&lt;a href="https://github.com/canyon289/bayesian-model-evaluation"&gt;Code&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;PyTest for Data Scientists&lt;/h3&gt;
&lt;p&gt;PyDataLA 2018&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=dY1nNtDTruE"&gt;Recording&lt;/a&gt;
&amp;nbsp;
&lt;a href="https://github.com/canyon289/PyTestforDataSciencePyDataLA"&gt;Code&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;PyTest&lt;/h3&gt;
&lt;p&gt;Code Camp 2017&lt;br&gt;
&lt;em&gt;Introductory level talk meant to encourage others to use python testing by going through basic and intermediate PyTest examples.&lt;/em&gt;&lt;br&gt;
&lt;a href="https://github.com/canyon289/CodeCampPytest"&gt;Code&lt;/a&gt;
&amp;nbsp;
&lt;a href="https://docs.google.com/presentation/d/11A742qhUaQdtwL3IaXQGzT3lB9PfRTXOIN4SpgSbwxo/edit#slide=id.p"&gt;Slides&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;</content><category term="pages"></category></entry><entry><title>Why Data Science</title><link href="/WhyDS.html" rel="alternate"></link><published>2016-02-21T10:20:00+00:00</published><updated>2016-02-21T10:20:00+00:00</updated><author><name>Ravin Kumar</name></author><id>tag:None,2016-02-21:/WhyDS.html</id><summary type="html">&lt;p&gt;Say you're the type of person that curious about how the world 
works. &lt;/p&gt;
&lt;p&gt;In most cases you would need to spend years studying the subject,
learning every nuance and detail. If you wanted to learn about Chess
you might turn to Gary Kasparov or if you were interested in Go …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Say you're the type of person that curious about how the world 
works. &lt;/p&gt;
&lt;p&gt;In most cases you would need to spend years studying the subject,
learning every nuance and detail. If you wanted to learn about Chess
you might turn to Gary Kasparov or if you were interested in Go 
Champion Lee Sedol would be a good choice.
Say you wanted to understand what made a drug safe for humans
you might need to ask entire team of experts employed company 
like Merck with over 100 years in the business.&lt;/p&gt;
&lt;p&gt;No doubt all of these people and organizations would 
come to mind first. After all as folks
they have demonstrated their ability to beat any
other unaided human.&lt;/p&gt;
&lt;p&gt;But what if a second set of people can outperform these 
individuals? And what if those people could do it in as little
as a couple of months, moving from one problem to the next?&lt;/p&gt;
&lt;p&gt;As you might have guessed the second set of people now exists.
They are adept at using modern tools and mathematics to 
to rapidly understand the key drivers
of complex systems, then create models and predictions
that outperform any other human or system for the task at hand.&lt;/p&gt;
&lt;p&gt;As it stands humans using computers are better at Chess, Go,
and predicting which drugs are safe, better than the traditional experts in
field. And on top of that these people are given enormous flexibility
to learn from subject-matter experts, answer difficult questions,
and learn an enormous amounts about pretty much any topic 
of their choosing. And they can do this over and over
for a wide range of subjects.&lt;/p&gt;
&lt;p&gt;So there exists a job where you get to work with smart people,
learn, and employers seem to give you a lot of flexibility to do it?&lt;/p&gt;
&lt;h2&gt;What do I need to know and how do I get this job?&lt;/h2&gt;
&lt;p&gt;Well it turns out quite a bit. I won't get into the details here
but typically you have to know a lot of math, be perfect at statistics,
know a programming language or two, know a lot (seriously a lot) about how
data is captured, stored, transferred, and interpreted, and be an excellent
communicator.&lt;/p&gt;
&lt;p&gt;And then after all trying to learn all that stuff you  have to convince
one or more people that you're worth paying to do some or all of what's mentioned
above. This is the data science interview.&lt;/p&gt;</content><category term="Data Science"></category><category term="Data Science"></category></entry></feed>